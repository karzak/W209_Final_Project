<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0315.0125                                -->
<workbook source-build='9.3.0 (9300.16.0315.0125)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='modern' />
  <datasources>
    <datasource caption='zika - JSL' inline='true' name='textscan.1wp1dbc1kpht3r1fd503x1w7ql2a' version='9.3'>
      <connection class='textscan' directory='C:/Users/jlandesman/Documents/MIDS/209 - Data Visualization/Final Project/New Git Pull/data' filename='zika - JSL.csv' password='' server=''>
        <relation name='zika - JSL.csv' table='[zika - JSL#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='X' ordinal='1' />
            <column datatype='string' name='country' ordinal='2' />
            <column datatype='string' name='data_field' ordinal='3' />
            <column datatype='string' name='data_field_code' ordinal='4' />
            <column datatype='string' name='location' ordinal='5' />
            <column datatype='string' name='location_type' ordinal='6' />
            <column datatype='datetime' name='report_date' ordinal='7' />
            <column datatype='string' name='time_period' ordinal='8' />
            <column datatype='string' name='time_period_type' ordinal='9' />
            <column datatype='string' name='time_period_week' ordinal='10' />
            <column datatype='string' name='time_period_year' ordinal='11' />
            <column datatype='string' name='unit' ordinal='12' />
            <column datatype='real' name='value' ordinal='13' />
            <column datatype='string' name='sub_division' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[zika - JSL.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[zika - JSL.csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[zika - JSL.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_field</remote-name>
            <remote-type>129</remote-type>
            <local-name>[data_field]</local-name>
            <parent-name>[zika - JSL.csv]</parent-name>
            <remote-alias>data_field</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_field_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[data_field_code]</local-name>
            <parent-name>[zika - JSL.csv]</parent-name>
            <remote-alias>data_field_code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[zika - JSL.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location_type]</local-name>
            <parent-name>[zika - JSL.csv]</parent-name>
            <remote-alias>location_type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>report_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[report_date]</local-name>
            <parent-name>[zika - JSL.csv]</parent-name>
            <remote-alias>report_date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period]</local-name>
            <parent-name>[zika - JSL.csv]</parent-name>
            <remote-alias>time_period</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period_type]</local-name>
            <parent-name>[zika - JSL.csv]</parent-name>
            <remote-alias>time_period_type</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period_week</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period_week]</local-name>
            <parent-name>[zika - JSL.csv]</parent-name>
            <remote-alias>time_period_week</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period_year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period_year]</local-name>
            <parent-name>[zika - JSL.csv]</parent-name>
            <remote-alias>time_period_year</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[zika - JSL.csv]</parent-name>
            <remote-alias>unit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[zika - JSL.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sub_division</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sub_division]</local-name>
            <parent-name>[zika - JSL.csv]</parent-name>
            <remote-alias>sub_division</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[zika - JSL.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' hidden='true' name='[F12]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F13]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F14]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F15]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F16]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F17]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F18]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F19]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Data Field' datatype='string' name='[data_field]' role='dimension' type='nominal' />
      <column caption='Data Field Code' datatype='string' name='[data_field_code]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Location Type' datatype='string' name='[location_type]' role='dimension' type='nominal' />
      <column caption='Report Date' datatype='datetime' name='[report_date]' role='dimension' type='ordinal' />
      <column caption='Sub Division' datatype='string' name='[sub_division]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal' />
      <column caption='Time Period Type' datatype='string' name='[time_period_type]' role='dimension' type='nominal' />
      <column caption='Time Period Week' datatype='string' name='[time_period_week]' role='dimension' type='nominal' />
      <column caption='Time Period Year' datatype='string' name='[time_period_year]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column-instance column='[data_field]' derivation='None' name='[none:data_field:nk]' pivot='key' type='nominal' />
      <column-instance column='[sub_division]' derivation='None' name='[none:sub_division:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country, Sub Division'>
          <field>[country]</field>
          <field>[sub_division]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.690909' measure-ordering='alphabetic' measure-percentage='0.309091' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:sub_division:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;New_York&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;South_Carolina&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;New_Jersey&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;US_Virgin_Islands&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Rhode_Island&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;District_of_Columbia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Pennsylvania††&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;New_Mexico&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;North_Carolina&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Puerto_Rico&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;West_Virginia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;New_Hampshire&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;American_Samoa&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:data_field:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;microcephaly_fatal_confirmed&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;microcephaly_fatal_not&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;microcephaly_fatal_under_investigation&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;microcephaly_under_investigation&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;municipality_microcephaly&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;municipality_microcephaly_suspected&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;zika_reported_local&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;microcephaly_not&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;microcephaly_confirmed&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;zika_reported_travel&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='all' inline='true' name='textscan.0sl0fh00t1fkep1f2f0sp0al1tb1' version='9.3'>
      <connection class='textscan' directory='C:/Users/jlandesman/Documents/MIDS/209 - Data Visualization/Final Project/New Git Pull/data' filename='all.csv' password='' server=''>
        <relation name='all.csv' table='[all#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='report_date' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='string' name='country' ordinal='2' />
            <column datatype='string' name='locality' ordinal='3' />
            <column datatype='string' name='locality_type' ordinal='4' />
            <column datatype='string' name='data_field' ordinal='5' />
            <column datatype='string' name='data_field_code' ordinal='6' />
            <column datatype='string' name='time_period' ordinal='7' />
            <column datatype='string' name='time_period_type' ordinal='8' />
            <column datatype='integer' name='value' ordinal='9' />
            <column datatype='string' name='unit' ordinal='10' />
            <column datatype='string' name='F12' ordinal='11' />
            <column datatype='string' name='F13' ordinal='12' />
            <column datatype='string' name='F14' ordinal='13' />
            <column datatype='string' name='F15' ordinal='14' />
            <column datatype='string' name='F16' ordinal='15' />
            <column datatype='string' name='F17' ordinal='16' />
            <column datatype='string' name='F18' ordinal='17' />
            <column datatype='string' name='F19' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>report_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[report_date]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>report_date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>locality</remote-name>
            <remote-type>129</remote-type>
            <local-name>[locality]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>locality</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>locality_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[locality_type]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>locality_type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_field</remote-name>
            <remote-type>129</remote-type>
            <local-name>[data_field]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>data_field</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_field_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[data_field_code]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>data_field_code</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>time_period</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period_type]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>time_period_type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>unit</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F12</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F12]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>F12</remote-alias>
            <ordinal>11</ordinal>
            <hidden>true</hidden>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F13</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F13]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>F13</remote-alias>
            <ordinal>12</ordinal>
            <hidden>true</hidden>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F14</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F14]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>F14</remote-alias>
            <ordinal>13</ordinal>
            <hidden>true</hidden>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F15</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F15]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>F15</remote-alias>
            <ordinal>14</ordinal>
            <hidden>true</hidden>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F16</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F16]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>F16</remote-alias>
            <ordinal>15</ordinal>
            <hidden>true</hidden>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F17</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F17]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>F17</remote-alias>
            <ordinal>16</ordinal>
            <hidden>true</hidden>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F18</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F18]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>F18</remote-alias>
            <ordinal>17</ordinal>
            <hidden>true</hidden>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F19</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F19]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>F19</remote-alias>
            <ordinal>18</ordinal>
            <hidden>true</hidden>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' hidden='true' name='[F12]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F13]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F14]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F15]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F16]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F17]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F18]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F19]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Data Field' datatype='string' name='[data_field]' role='dimension' type='nominal' />
      <column caption='Data Field Code' datatype='string' name='[data_field_code]' role='dimension' type='nominal' />
      <column caption='Locality' datatype='string' name='[locality]' role='dimension' type='nominal' />
      <column caption='Locality Type' datatype='string' name='[locality_type]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Report Date' datatype='date' name='[report_date]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal' />
      <column caption='Time Period Type' datatype='string' name='[time_period_type]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.628788' measure-ordering='alphabetic' measure-percentage='0.371212' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Outbound from GIG (Brazil Flights)' inline='true' name='excel-direct.0k2llkb03zoef71fxsbxn1x99lv8' version='9.3'>
      <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:\Users\jlandesman\Documents\MIDS\209 - Data Visualization\Final Project\New Git Pull\data\Brazil Flights.xlsx' interpretationMode='1' password='' server='' validate='no'>
        <relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='date' name='Pivot field names' />
            <column datatype='integer' name='Pivot field values' />
          </columns>
          <tag name='Pivot field names'>
            <value name='[Jul 1, 2016]' />
            <value name='[Jul 10, 2016]' />
            <value name='[Jul 11, 2016]' />
            <value name='[Jul 12, 2016]' />
            <value name='[Jul 13, 2016]' />
            <value name='[Jul 14, 2016]' />
            <value name='[Jul 15, 2016]' />
            <value name='[Jul 2, 2016]' />
            <value name='[Jul 3, 2016]' />
            <value name='[Jul 4, 2016]' />
            <value name='[Jul 5, 2016]' />
            <value name='[Jul 6, 2016]' />
            <value name='[Jul 7, 2016]' />
            <value name='[Jul 8, 2016]' />
            <value name='[Jul 9, 2016]' />
            <value name='[Jun 1, 2016]' />
            <value name='[Jun 10, 2016]' />
            <value name='[Jun 11, 2016]' />
            <value name='[Jun 12, 2016]' />
            <value name='[Jun 13, 2016]' />
            <value name='[Jun 14, 2016]' />
            <value name='[Jun 15, 2016]' />
            <value name='[Jun 16, 2016]' />
            <value name='[Jun 17, 2016]' />
            <value name='[Jun 18, 2016]' />
            <value name='[Jun 19, 2016]' />
            <value name='[Jun 2, 2016]' />
            <value name='[Jun 20, 2016]' />
            <value name='[Jun 21, 2016]' />
            <value name='[Jun 22, 2016]' />
            <value name='[Jun 23, 2016]' />
            <value name='[Jun 24, 2016]' />
            <value name='[Jun 25, 2016]' />
            <value name='[Jun 26, 2016]' />
            <value name='[Jun 27, 2016]' />
            <value name='[Jun 28, 2016]' />
            <value name='[Jun 29, 2016]' />
            <value name='[Jun 3, 2016]' />
            <value name='[Jun 30, 2016]' />
            <value name='[Jun 4, 2016]' />
            <value name='[Jun 5, 2016]' />
            <value name='[Jun 6, 2016]' />
            <value name='[Jun 7, 2016]' />
            <value name='[Jun 8, 2016]' />
            <value name='[Jun 9, 2016]' />
            <value name='[May 15, 2016]' />
            <value name='[May 16, 2016]' />
            <value name='[May 17, 2016]' />
            <value name='[May 18, 2016]' />
            <value name='[May 19, 2016]' />
            <value name='[May 20, 2016]' />
            <value name='[May 21, 2016]' />
            <value name='[May 22, 2016]' />
            <value name='[May 23, 2016]' />
            <value name='[May 24, 2016]' />
            <value name='[May 25, 2016]' />
            <value name='[May 26, 2016]' />
            <value name='[May 27, 2016]' />
            <value name='[May 28, 2016]' />
            <value name='[May 29, 2016]' />
            <value name='[May 30, 2016]' />
            <value name='[May 31, 2016]' />
          </tag>
          <groups>
            <group name='Pivot field values'>
              <field name='[Outbound from GIG].[Jul 1, 2016]' />
              <field name='[Outbound from GIG].[Jul 10, 2016]' />
              <field name='[Outbound from GIG].[Jul 11, 2016]' />
              <field name='[Outbound from GIG].[Jul 12, 2016]' />
              <field name='[Outbound from GIG].[Jul 13, 2016]' />
              <field name='[Outbound from GIG].[Jul 14, 2016]' />
              <field name='[Outbound from GIG].[Jul 15, 2016]' />
              <field name='[Outbound from GIG].[Jul 2, 2016]' />
              <field name='[Outbound from GIG].[Jul 3, 2016]' />
              <field name='[Outbound from GIG].[Jul 4, 2016]' />
              <field name='[Outbound from GIG].[Jul 5, 2016]' />
              <field name='[Outbound from GIG].[Jul 6, 2016]' />
              <field name='[Outbound from GIG].[Jul 7, 2016]' />
              <field name='[Outbound from GIG].[Jul 8, 2016]' />
              <field name='[Outbound from GIG].[Jul 9, 2016]' />
              <field name='[Outbound from GIG].[Jun 1, 2016]' />
              <field name='[Outbound from GIG].[Jun 10, 2016]' />
              <field name='[Outbound from GIG].[Jun 11, 2016]' />
              <field name='[Outbound from GIG].[Jun 12, 2016]' />
              <field name='[Outbound from GIG].[Jun 13, 2016]' />
              <field name='[Outbound from GIG].[Jun 14, 2016]' />
              <field name='[Outbound from GIG].[Jun 15, 2016]' />
              <field name='[Outbound from GIG].[Jun 16, 2016]' />
              <field name='[Outbound from GIG].[Jun 17, 2016]' />
              <field name='[Outbound from GIG].[Jun 18, 2016]' />
              <field name='[Outbound from GIG].[Jun 19, 2016]' />
              <field name='[Outbound from GIG].[Jun 2, 2016]' />
              <field name='[Outbound from GIG].[Jun 20, 2016]' />
              <field name='[Outbound from GIG].[Jun 21, 2016]' />
              <field name='[Outbound from GIG].[Jun 22, 2016]' />
              <field name='[Outbound from GIG].[Jun 23, 2016]' />
              <field name='[Outbound from GIG].[Jun 24, 2016]' />
              <field name='[Outbound from GIG].[Jun 25, 2016]' />
              <field name='[Outbound from GIG].[Jun 26, 2016]' />
              <field name='[Outbound from GIG].[Jun 27, 2016]' />
              <field name='[Outbound from GIG].[Jun 28, 2016]' />
              <field name='[Outbound from GIG].[Jun 29, 2016]' />
              <field name='[Outbound from GIG].[Jun 3, 2016]' />
              <field name='[Outbound from GIG].[Jun 30, 2016]' />
              <field name='[Outbound from GIG].[Jun 4, 2016]' />
              <field name='[Outbound from GIG].[Jun 5, 2016]' />
              <field name='[Outbound from GIG].[Jun 6, 2016]' />
              <field name='[Outbound from GIG].[Jun 7, 2016]' />
              <field name='[Outbound from GIG].[Jun 8, 2016]' />
              <field name='[Outbound from GIG].[Jun 9, 2016]' />
              <field name='[Outbound from GIG].[May 15, 2016]' />
              <field name='[Outbound from GIG].[May 16, 2016]' />
              <field name='[Outbound from GIG].[May 17, 2016]' />
              <field name='[Outbound from GIG].[May 18, 2016]' />
              <field name='[Outbound from GIG].[May 19, 2016]' />
              <field name='[Outbound from GIG].[May 20, 2016]' />
              <field name='[Outbound from GIG].[May 21, 2016]' />
              <field name='[Outbound from GIG].[May 22, 2016]' />
              <field name='[Outbound from GIG].[May 23, 2016]' />
              <field name='[Outbound from GIG].[May 24, 2016]' />
              <field name='[Outbound from GIG].[May 25, 2016]' />
              <field name='[Outbound from GIG].[May 26, 2016]' />
              <field name='[Outbound from GIG].[May 27, 2016]' />
              <field name='[Outbound from GIG].[May 28, 2016]' />
              <field name='[Outbound from GIG].[May 29, 2016]' />
              <field name='[Outbound from GIG].[May 30, 2016]' />
              <field name='[Outbound from GIG].[May 31, 2016]' />
            </group>
          </groups>
          <relation name='Outbound from GIG' table='[&apos;Outbound from GIG$&apos;]' type='table'>
            <columns gridOrigin='A2:BL25:no:A2:BL25:1' header='yes' lost='0' outcome='1' processed='1107'>
              <column datatype='string' name='Destination Country' ordinal='0' />
              <column datatype='integer' name='May 15, 2016' ordinal='1' />
              <column datatype='integer' name='May 16, 2016' ordinal='2' />
              <column datatype='integer' name='May 17, 2016' ordinal='3' />
              <column datatype='integer' name='May 18, 2016' ordinal='4' />
              <column datatype='integer' name='May 19, 2016' ordinal='5' />
              <column datatype='integer' name='May 20, 2016' ordinal='6' />
              <column datatype='integer' name='May 21, 2016' ordinal='7' />
              <column datatype='integer' name='May 22, 2016' ordinal='8' />
              <column datatype='integer' name='May 23, 2016' ordinal='9' />
              <column datatype='integer' name='May 24, 2016' ordinal='10' />
              <column datatype='integer' name='May 25, 2016' ordinal='11' />
              <column datatype='integer' name='May 26, 2016' ordinal='12' />
              <column datatype='integer' name='May 27, 2016' ordinal='13' />
              <column datatype='integer' name='May 28, 2016' ordinal='14' />
              <column datatype='integer' name='May 29, 2016' ordinal='15' />
              <column datatype='integer' name='May 30, 2016' ordinal='16' />
              <column datatype='integer' name='May 31, 2016' ordinal='17' />
              <column datatype='integer' name='Jun 1, 2016' ordinal='18' />
              <column datatype='integer' name='Jun 2, 2016' ordinal='19' />
              <column datatype='integer' name='Jun 3, 2016' ordinal='20' />
              <column datatype='integer' name='Jun 4, 2016' ordinal='21' />
              <column datatype='integer' name='Jun 5, 2016' ordinal='22' />
              <column datatype='integer' name='Jun 6, 2016' ordinal='23' />
              <column datatype='integer' name='Jun 7, 2016' ordinal='24' />
              <column datatype='integer' name='Jun 8, 2016' ordinal='25' />
              <column datatype='integer' name='Jun 9, 2016' ordinal='26' />
              <column datatype='integer' name='Jun 10, 2016' ordinal='27' />
              <column datatype='integer' name='Jun 11, 2016' ordinal='28' />
              <column datatype='integer' name='Jun 12, 2016' ordinal='29' />
              <column datatype='integer' name='Jun 13, 2016' ordinal='30' />
              <column datatype='integer' name='Jun 14, 2016' ordinal='31' />
              <column datatype='integer' name='Jun 15, 2016' ordinal='32' />
              <column datatype='integer' name='Jun 16, 2016' ordinal='33' />
              <column datatype='integer' name='Jun 17, 2016' ordinal='34' />
              <column datatype='integer' name='Jun 18, 2016' ordinal='35' />
              <column datatype='integer' name='Jun 19, 2016' ordinal='36' />
              <column datatype='integer' name='Jun 20, 2016' ordinal='37' />
              <column datatype='integer' name='Jun 21, 2016' ordinal='38' />
              <column datatype='integer' name='Jun 22, 2016' ordinal='39' />
              <column datatype='integer' name='Jun 23, 2016' ordinal='40' />
              <column datatype='integer' name='Jun 24, 2016' ordinal='41' />
              <column datatype='integer' name='Jun 25, 2016' ordinal='42' />
              <column datatype='integer' name='Jun 26, 2016' ordinal='43' />
              <column datatype='integer' name='Jun 27, 2016' ordinal='44' />
              <column datatype='integer' name='Jun 28, 2016' ordinal='45' />
              <column datatype='integer' name='Jun 29, 2016' ordinal='46' />
              <column datatype='integer' name='Jun 30, 2016' ordinal='47' />
              <column datatype='integer' name='Jul 1, 2016' ordinal='48' />
              <column datatype='integer' name='Jul 2, 2016' ordinal='49' />
              <column datatype='integer' name='Jul 3, 2016' ordinal='50' />
              <column datatype='integer' name='Jul 4, 2016' ordinal='51' />
              <column datatype='integer' name='Jul 5, 2016' ordinal='52' />
              <column datatype='integer' name='Jul 6, 2016' ordinal='53' />
              <column datatype='integer' name='Jul 7, 2016' ordinal='54' />
              <column datatype='integer' name='Jul 8, 2016' ordinal='55' />
              <column datatype='integer' name='Jul 9, 2016' ordinal='56' />
              <column datatype='integer' name='Jul 10, 2016' ordinal='57' />
              <column datatype='integer' name='Jul 11, 2016' ordinal='58' />
              <column datatype='integer' name='Jul 12, 2016' ordinal='59' />
              <column datatype='integer' name='Jul 13, 2016' ordinal='60' />
              <column datatype='integer' name='Jul 14, 2016' ordinal='61' />
              <column datatype='integer' name='Jul 15, 2016' ordinal='62' />
              <column datatype='integer' name='Grand Total' ordinal='63' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Outbound from GIG]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A2:BL25:no:A2:BL25:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>1107</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Destination Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Destination Country]</local-name>
            <parent-name>[Outbound from GIG]</parent-name>
            <remote-alias>Destination Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grand Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grand Total]</local-name>
            <parent-name>[Outbound from GIG]</parent-name>
            <remote-alias>Grand Total</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot field names</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Pivot field names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot field names</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot field values</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Pivot field values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot field values</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Destination Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' hidden='true' name='[Grand Total]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Date' datatype='date' name='[Pivot field names]' role='dimension' type='ordinal' />
      <column caption='Airline Seats' datatype='integer' name='[Pivot field values]' role='measure' type='quantitative' />
      <column-instance column='[Destination Country]' derivation='None' name='[none:Destination Country:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.127273' measure-ordering='alphabetic' measure-percentage='0.872727' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Destination Country:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;France&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Destination Country' />
        <field-sort-custom-order field='Pivot field names' />
        <field-sort-custom-order field='Pivot field values' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Average number of Airline Seats Per Day from Brazil - Summer 2016'>
      <table>
        <view>
          <datasources>
            <datasource caption='Outbound from GIG (Brazil Flights)' name='excel-direct.0k2llkb03zoef71fxsbxn1x99lv8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.0k2llkb03zoef71fxsbxn1x99lv8'>
            <column datatype='string' name='[Destination Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[Pivot field names]' role='dimension' type='ordinal' />
            <column caption='Airline Seats' datatype='integer' name='[Pivot field values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot field values]' derivation='Avg' name='[avg:Pivot field values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Destination Country]' derivation='None' name='[none:Destination Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot field names]' derivation='None' name='[none:Pivot field names:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0k2llkb03zoef71fxsbxn1x99lv8].[none:Destination Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Destination Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Destination Country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Canada&quot;' function='range' level='[none:Destination Country:nk]' to='&quot;Germany&quot;' />
              <groupfilter from='&quot;Italy&quot;' function='range' level='[none:Destination Country:nk]' to='&quot;Uruguay&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.0k2llkb03zoef71fxsbxn1x99lv8].[none:Destination Country:nk]' direction='DESC' using='[excel-direct.0k2llkb03zoef71fxsbxn1x99lv8].[avg:Pivot field values:qk]' />
          <filter class='quantitative' column='[excel-direct.0k2llkb03zoef71fxsbxn1x99lv8].[none:Pivot field names:qk]' included-values='in-range'>
            <min>#2016-07-15#</min>
            <max>#2016-07-15#</max>
          </filter>
          <slices>
            <column>[excel-direct.0k2llkb03zoef71fxsbxn1x99lv8].[none:Destination Country:nk]</column>
            <column>[excel-direct.0k2llkb03zoef71fxsbxn1x99lv8].[none:Pivot field names:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[excel-direct.0k2llkb03zoef71fxsbxn1x99lv8].[none:Destination Country:nk]</rows>
        <cols>[excel-direct.0k2llkb03zoef71fxsbxn1x99lv8].[avg:Pivot field values:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Brazil - Overview and categories'>
      <table>
        <view>
          <datasources>
            <datasource caption='zika - JSL' name='textscan.1wp1dbc1kpht3r1fd503x1w7ql2a' />
          </datasources>
          <datasource-dependencies datasource='textscan.1wp1dbc1kpht3r1fd503x1w7ql2a'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Data Field' datatype='string' name='[data_field]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[data_field]' derivation='None' name='[none:data_field:nk]' pivot='key' type='nominal' />
            <column-instance column='[report_date]' derivation='None' name='[none:report_date:qk]' pivot='key' type='quantitative' />
            <column caption='Report Date' datatype='datetime' name='[report_date]' role='dimension' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]' direction='DESC' using='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[sum:value:qk]' />
          <filter class='quantitative' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:report_date:qk]' included-values='in-range'>
            <min>#2016-06-18 00:00:00#</min>
            <max>#2016-06-18 00:00:00#</max>
          </filter>
          <slices>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]</column>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:report_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]' value='404' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]</rows>
        <cols>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[sum:value:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Brazil: Microcephaly vs Not'>
      <table>
        <view>
          <datasources>
            <datasource caption='zika - JSL' name='textscan.1wp1dbc1kpht3r1fd503x1w7ql2a' />
          </datasources>
          <datasource-dependencies datasource='textscan.1wp1dbc1kpht3r1fd503x1w7ql2a'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Data Field' datatype='string' name='[data_field]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[data_field]' derivation='None' name='[none:data_field:nk]' pivot='key' type='nominal' />
            <column caption='Report Date' datatype='datetime' name='[report_date]' role='dimension' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[report_date]' derivation='Month-Trunc' name='[tmn:report_date:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:data_field:nk]' member='&quot;microcephaly_confirmed&quot;' />
              <groupfilter function='member' level='[none:data_field:nk]' member='&quot;microcephaly_not&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]' direction='DESC' using='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[sum:value:qk]' />
          <slices>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]</column>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[sum:value:qk]</rows>
        <cols>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[tmn:report_date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Puerto Rico Local vs Travel'>
      <table>
        <view>
          <datasources>
            <datasource caption='zika - JSL' name='textscan.1wp1dbc1kpht3r1fd503x1w7ql2a' />
          </datasources>
          <datasource-dependencies datasource='textscan.1wp1dbc1kpht3r1fd503x1w7ql2a'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Data Field' datatype='string' name='[data_field]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[data_field]' derivation='None' name='[none:data_field:nk]' pivot='key' type='nominal' />
            <column-instance column='[sub_division]' derivation='None' name='[none:sub_division:nk]' pivot='key' type='nominal' />
            <column caption='Report Date' datatype='datetime' name='[report_date]' role='dimension' type='ordinal' />
            <column caption='Sub Division' datatype='string' name='[sub_division]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[report_date]' derivation='Day-Trunc' name='[tdy:report_date:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;United_States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]'>
            <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Puerto_Rico&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]</column>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[sum:value:qk]</rows>
        <cols>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[tdy:report_date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='United States: Number of Zika Cases (Graph)'>
      <table>
        <view>
          <datasources>
            <datasource caption='zika - JSL' name='textscan.1wp1dbc1kpht3r1fd503x1w7ql2a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1wp1dbc1kpht3r1fd503x1w7ql2a'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Data Field' datatype='string' name='[data_field]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[data_field]' derivation='None' name='[none:data_field:nk]' pivot='key' type='nominal' />
            <column-instance column='[report_date]' derivation='None' name='[none:report_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sub_division]' derivation='None' name='[none:sub_division:nk]' pivot='key' type='nominal' />
            <column caption='Report Date' datatype='datetime' name='[report_date]' role='dimension' type='ordinal' />
            <column caption='Sub Division' datatype='string' name='[sub_division]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;United_States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]'>
            <groupfilter function='member' level='[none:data_field:nk]' member='&quot;zika_reported_travel&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:report_date:qk]' included-values='in-range'>
            <min>#2016-06-15 00:00:00#</min>
            <max>#2016-06-15 00:00:00#</max>
          </filter>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;American_Samoa&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;District_of_Columbia&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;New_Hampshire&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;New_Jersey&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;New_Mexico&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;New_York&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;North_Carolina&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Pennsylvania††&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Rhode_Island&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;South_Carolina&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;US_Virgin_Islands&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;West_Virginia&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Wisconsin&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]' direction='DESC' using='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[sum:value:qk]' />
          <slices>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]</column>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]</column>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]</column>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:report_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]</rows>
        <cols>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[sum:value:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='United States: Number of Zika Cases (Map)'>
      <table>
        <view>
          <datasources>
            <datasource caption='zika - JSL' name='textscan.1wp1dbc1kpht3r1fd503x1w7ql2a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1wp1dbc1kpht3r1fd503x1w7ql2a'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Data Field' datatype='string' name='[data_field]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[data_field]' derivation='None' name='[none:data_field:nk]' pivot='key' type='nominal' />
            <column-instance column='[report_date]' derivation='None' name='[none:report_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sub_division]' derivation='None' name='[none:sub_division:nk]' pivot='key' type='nominal' />
            <column caption='Report Date' datatype='datetime' name='[report_date]' role='dimension' type='ordinal' />
            <column caption='Sub Division' datatype='string' name='[sub_division]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;United_States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]'>
            <groupfilter function='member' level='[none:data_field:nk]' member='&quot;zika_reported_travel&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:report_date:qk]' included-values='in-range'>
            <min>#2016-06-15 00:00:00#</min>
            <max>#2016-06-15 00:00:00#</max>
          </filter>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;American_Samoa&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;District_of_Columbia&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;New_Hampshire&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;New_Jersey&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;New_Mexico&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;New_York&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;North_Carolina&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Pennsylvania††&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Rhode_Island&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;South_Carolina&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;US_Virgin_Islands&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;West_Virginia&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Wisconsin&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]' direction='DESC' using='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[sum:value:qk]' />
          <slices>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]</column>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]</column>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]</column>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:report_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[Longitude (generated)]' field-type='quantitative' max='-3534124.992325604' min='-14752800.80446849' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[Latitude (generated)]' field-type='quantitative' max='7924511.7915500458' min='1808975.380381912' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]' />
              <color column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[sum:value:qk]' />
              <geometry column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[Latitude (generated)]</rows>
        <cols>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Zika  - Brazil Detail'>
      <table>
        <view>
          <datasources>
            <datasource caption='zika - JSL' name='textscan.1wp1dbc1kpht3r1fd503x1w7ql2a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1wp1dbc1kpht3r1fd503x1w7ql2a'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Data Field' datatype='string' name='[data_field]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[data_field]' derivation='None' name='[none:data_field:nk]' pivot='key' type='nominal' />
            <column-instance column='[report_date]' derivation='None' name='[none:report_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sub_division]' derivation='None' name='[none:sub_division:nk]' pivot='key' type='nominal' />
            <column caption='Report Date' datatype='datetime' name='[report_date]' role='dimension' type='ordinal' />
            <column caption='Sub Division' datatype='string' name='[sub_division]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:data_field:nk]' member='&quot;microcephaly_confirmed&quot;' />
              <groupfilter function='member' level='[none:data_field:nk]' member='&quot;microcephaly_not&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:report_date:qk]' included-values='in-range'>
            <min>#2016-06-18 00:00:00#</min>
            <max>#2016-06-18 00:00:00#</max>
          </filter>
          <slices>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]</column>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:report_date:qk]</column>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]' />
              <lod column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]' />
              <color column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[sum:value:qk]' />
              <geometry column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[Latitude (generated)]</rows>
        <cols>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Zika - Challenges Cleaning the Data'>
      <table>
        <view>
          <datasources>
            <datasource caption='all' name='textscan.0sl0fh00t1fkep1f2f0sp0al1tb1' />
          </datasources>
          <datasource-dependencies datasource='textscan.0sl0fh00t1fkep1f2f0sp0al1tb1'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[textscan.0sl0fh00t1fkep1f2f0sp0al1tb1].[none:country:nk]' direction='DESC' using='[textscan.0sl0fh00t1fkep1f2f0sp0al1tb1].[sum:value:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[textscan.0sl0fh00t1fkep1f2f0sp0al1tb1].[none:country:nk]</rows>
        <cols>[textscan.0sl0fh00t1fkep1f2f0sp0al1tb1].[sum:value:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Zika Cases Over Time + Puerto Rico'>
      <table>
        <view>
          <datasources>
            <datasource caption='zika - JSL' name='textscan.1wp1dbc1kpht3r1fd503x1w7ql2a' />
          </datasources>
          <datasource-dependencies datasource='textscan.1wp1dbc1kpht3r1fd503x1w7ql2a'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Data Field' datatype='string' name='[data_field]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[data_field]' derivation='None' name='[none:data_field:nk]' pivot='key' type='nominal' />
            <column-instance column='[sub_division]' derivation='None' name='[none:sub_division:nk]' pivot='key' type='nominal' />
            <column caption='Report Date' datatype='datetime' name='[report_date]' role='dimension' type='ordinal' />
            <column caption='Sub Division' datatype='string' name='[sub_division]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[report_date]' derivation='Day-Trunc' name='[tdy:report_date:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Puerto_Rico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United_States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:data_field:nk]' member='&quot;zika_reported_local&quot;' />
              <groupfilter function='member' level='[none:data_field:nk]' member='&quot;zika_reported_travel&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;New_Jersey&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;New_York&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Puerto_Rico&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Texas&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]</column>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]</column>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[sum:value:qk]</rows>
        <cols>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[tdy:report_date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Zika Cases Over Time - Main States'>
      <table>
        <view>
          <datasources>
            <datasource caption='zika - JSL' name='textscan.1wp1dbc1kpht3r1fd503x1w7ql2a' />
          </datasources>
          <datasource-dependencies datasource='textscan.1wp1dbc1kpht3r1fd503x1w7ql2a'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Data Field' datatype='string' name='[data_field]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[data_field]' derivation='None' name='[none:data_field:nk]' pivot='key' type='nominal' />
            <column-instance column='[sub_division]' derivation='None' name='[none:sub_division:nk]' pivot='key' type='nominal' />
            <column caption='Report Date' datatype='datetime' name='[report_date]' role='dimension' type='ordinal' />
            <column caption='Sub Division' datatype='string' name='[sub_division]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[report_date]' derivation='Day-Trunc' name='[tdy:report_date:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;United_States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]'>
            <groupfilter function='member' level='[none:data_field:nk]' member='&quot;zika_reported_travel&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;New_Jersey&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;New_York&quot;' />
              <groupfilter function='member' level='[none:sub_division:nk]' member='&quot;Texas&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]</column>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]</column>
            <column>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[sum:value:qk]</rows>
        <cols>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[tdy:report_date:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Zika Project - Interim update</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5913' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='5913' />
            <zone h='82365' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='17220'>
              <flipboard active-id='11' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Welcome' captured-sheet='United States: Number of Zika Cases (Map)' id='1' />
                  <story-point caption='The data has proved to be quite messy, and we are still in the midst of cleaning it ' captured-sheet='Zika - Challenges Cleaning the Data' id='2' />
                  <story-point caption='In the United States, New York and Florida have had the highest number of cases year to date' captured-sheet='United States: Number of Zika Cases (Map)' id='3' />
                  <story-point caption='However the total number of cases is generally low (174 cases total in New York)' captured-sheet='United States: Number of Zika Cases (Graph)' id='4' />
                  <story-point caption='The infection rate seems to be fairly constant, despite expectations for an acceleration over the summer' captured-sheet='Zika Cases Over Time - Main States' id='5' />
                  <story-point caption='Puerto Rico is another story' captured-sheet='Zika Cases Over Time + Puerto Rico' id='6' />
                  <story-point caption='PR&apos;s local mosquito population is now endemic with zika.  In the rest of the US, there has yet to be a single  case of transmission from person to person. Every infection on the mainland US has occurred while someone is traveling.  ' captured-sheet='Puerto Rico Local vs Travel' id='7' />
                  <story-point caption='Brazil breaks down the data in somewhat more detail.  ' captured-sheet='Brazil - Overview and categories' id='8' />
                  <story-point caption='You can see the science advancing - some cases they thought were confirmed turned out not to be Zika' captured-sheet='Brazil: Microcephaly vs Not' id='9' />
                  <story-point caption='Its also interesting that Brazil&apos;s Zika cases are heavily concentrated - outside of Rio, which augurs well for the olympics' captured-sheet='Zika  - Brazil Detail' id='10' />
                  <story-point caption='We also have information on international flight patterns into and out of Brazil.  If Argentina has mosquitos that can carry Zika, they appear to be at risk. Panama is likely just a stop over for additional flights to other countries' captured-sheet='Average number of Airline Seats Per Day from Brazil - Summer 2016' id='11' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='95'>
    <window class='worksheet' name='United States: Number of Zika Cases (Map)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[sum:value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:report_date:qk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
    </window>
    <window class='worksheet' name='United States: Number of Zika Cases (Graph)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:report_date:qk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Zika Cases Over Time - Main States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[dy:report_date:ok]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[mn:report_date:ok]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:location:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[yr:report_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Zika Cases Over Time + Puerto Rico'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[dy:report_date:ok]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[mn:report_date:ok]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:location:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[yr:report_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Puerto Rico Local vs Travel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[dy:report_date:ok]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[yr:report_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Brazil - Overview and categories'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:report_date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Brazil: Microcephaly vs Not'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:report_date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Zika - Challenges Cleaning the Data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0sl0fh00t1fkep1f2f0sp0al1tb1].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Zika  - Brazil Detail'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[sum:value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:country:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:data_field:nk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:report_date:qk]</field>
            <field>[textscan.1wp1dbc1kpht3r1fd503x1w7ql2a].[none:sub_division:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average number of Airline Seats Per Day from Brazil - Summer 2016'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0k2llkb03zoef71fxsbxn1x99lv8].[none:Destination Country:nk]</field>
            <field>[excel-direct.0k2llkb03zoef71fxsbxn1x99lv8].[none:Pivot field names:nk]</field>
            <field>[excel-direct.0k2llkb03zoef71fxsbxn1x99lv8].[none:Pivot field names:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='United States: Number of Zika Cases (Map)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nNS9WZMlSXYe9rnHetfMrMqt9qreu6ebMwBmAHAAEiDGQAkQRZPEZ+kf6VGm
      F5peZDI+0GAmkwjQJJAmI0gNBgMOeqZneu/qqq7sWjIrK9e7xeauB4/jccKvx82arQrytuq8
      94aHr2f3c46LR48eaSEEtNYQQgAAFkUOrRXiMIasf6uUQl4WiIIQZVVCwxQpJQIh7WcphG1H
      a1OrVJX5rAEFhSgIISDsO1SP3usqVVUhCALbNq/vfueFnimlnqs/33Nqg54ppRAEgbdft66o
      16TX6yHLMpRlubRGvL8gCKCUAgAMBgMIIZBlGaIownQ6XeorKwtobepLIc36SoEgCFBVFcqq
      QlmVAATSKEZRlqh0Rb0ijWLvHBZFVn82vw0HAwx6fe+a/f+1hHEcIwxDlGVpf9QCBtijEIEM
      mt9zIA4iBDpEXuR2Y+MwRlADVl4WCIRApTXS2CxsXK+g1hoQBvR9C35RkVJaBOAAdBHiuO27
      CO/2zZGlq42yLBFFkf1Na23rc0QTQiAMQwyHQwhhgHKxWNgxdCELzZUQADAEIIqi1nwrVSFX
      JSQCJFGMQAYQQmA4HCIIApydnSGu9wUA4jBCHMdL83WL0hqFrlpjLFWFXr9vieLf91IUZs5R
      FHXWkcfHxwiCoLUItJH0twH0CHmZoyiLVv2iKuymRWGIKIwgABQVQyoCEAZEXUDvbkgXoPJ2
      lFKWarrPXIpO9dz2fNTY95sP+ThAcy4TxzFGo5FFKt43rSu97/Y5HA7t97IsLefgc8rLElEQ
      op/2EQahbaMsS0gpkSQJhBBYH69hfbzmXd/O9YBuzbEoClSMUP59L0EQIAzD1m987QAgnC8W
      0FojDEMUhQHkUAboJymkaFPAKAgRSIm8KJCXhQH4etEt+645BlEioL25LlWlsgrolVKtNvhk
      qHCg8z2n79QOF2XccXKq3jUu/nmVCKS1xmw2Q1EUUEp5uY1vrACQ5zl6vZ7lHLQWvMRhCClk
      q504jpGmKYQQyPPcilCr1n5prlojlCEgzedSVea5aOZYVRWyLIPWGlFkOMvzcOMXVXzzraoK
      UjbrFQLA08NDbG9ttYAokEGL/VkAFhJJFLeoTV7mWOTKUn4hBMIggNLNZrkih0+G7yoXcQD+
      7HlFIt42B4DnEcV4Hc5deN+EWASAF43fV/I8R5IkkFJa7sERFoAlUtR3FEVWNFssFpBSot/v
      4/T01EtE3HlxpE4jIyppaISVQhRHUMq0m2UZqqpqOFGeY7FYYDAYLEkUf58KidBU5PbODoqi
      gNbaUhkq7oJx9hHUCq8UAqQRBwyzhBCWG3Dg5G3zdn2F+uf/+DsXLbJL0fkc+LucqrqyOJ+z
      yz59c6O/nJhwLrZqrPwzAX2e5wAM5XLrue+naYrhcIgoijCZTHB0eowojpFlma3jExMvKlJI
      hEEAKI3pZILZbIayLJeQvygKnJ2d4fz8HPP5vFXnZZQ8z5fm68KRBIDhaISnT59CStmSmZ4X
      yKIwRBLFK0UQogoECF2iAP+8CjGIBXc9I6DrstL4kJED6fNwJKBhs2maWnGF3ucsuIu70Fhc
      YEqSBHEcI45j5HluEYHecdcriiKkaYqiKDCdTpEVOSqlcHj8DEdnJ1jkGZRurGEX6VPub7Q+
      Xdzb1RXm8zkODw9xenr6CyHdr6JUVWWJu494AYAsygL9fh+LLMOT/X0EQYA4jltykqvocYqs
      lLKUvktepnr9fr+lWPN6PoTwIR+nsJzV+up26Qy+cRLVXcVlVlFfpRR6vR7CsK0TufPg311u
      Q4UIEcnxs9ls6X2Xq1VVhbOzM0ynU2OhCkIMkh4CKRFIiTiKrXgqpWzNlT771rLrswsH1AaN
      qygKhGEIpRTOzs5eChL0ej0EQWA5gRcBlFJQWuHqtWsYr61hb28Pp6enCMNwyXzkysmr5Hgf
      NyiKAnG8mlNc1I7bv1vPN0nfxvqQwccZfBvno5B5nqMoCqRpumR5uKi4YhZRdK31EgXl1FZr
      jV6vhziOjb2fiRxUpxen6MWpEWE6+gvDEKPRqCUfr9KJVnEywFBejqhVVeH09BSLxeLnWpdf
      thA3K4oCi8WipbMAtbm6qirM5jPM5jNIKbF79SriJMHXX39tAbbLesA7WkWJaXGoPTLNrRKD
      +IL6ZPSuPruo/EVj89XrEgG7OMFisUAQBEu61KrSNYfZbIbJZNKpn/R6PaytrSEIAmvvvkjU
      48gTBAHSNLVjJWuOT99yuRbn/u48abwcmWivZ7OZV2z9dZSqqnB+fm4JQ1VVlpNynczosFqj
      rErMszmqskQvTXHt2jXs7+/j+PjYUrQusYTL9ryeS02pYzKX0b8kSdDv95GmqXcyXfpBl9jU
      NQ5e3xV33Lb59y5goJIkCdI0tRSGDhVd2d5XOIDz8S5q8zQVFxlnsxmyLGtR1YuQjt6P49ge
      zBGFJKsOr8vXjf75RGM+F6VUiwP6EPtFKMZEJMgAEIYhkiSxz2gekn5o5PvmBO3atWuYzefQ
      0EtcoEs08SmXHLDILDgcDq2iV1UVFosF8jxfsue7QMnH6yLDRZYWHzX0ffe1fVHp9Xro9/vW
      jYHrUZwjdK2RS01dhdpHBMim3bVWXd/zPLeWGt9z3p7bL62zb+3opJrXdedaFAUmk4nXQvOr
      LEIIe+IeRRGklFan4iXspT2UqoKqsT8rcvTiFGVZIgxDs/hoH9t3dQgsy6iucleWJWazGYbD
      IfI8by0+LQghwUX9+QCJik+GJWDhfXLA9Il6LhD4kCHPc5RlifF4jCzLoJRCFEUoy9KeRpIf
      k5TSEgE+RhfxXZGERMfpdGp/j+PYGgKyLPMSC3cvOMKtmiNfG3esnGBSnbIsrX7H5+TuCa0X
      HboS97xIzP5FConaq0TSsKoqKK0gpTm4Ukqb0z4N69oALC/YKqrR9Zkv1nQ6Ra/Xw2w265Th
      fUDtli69gbNsPn4fVeviHD59wzdnar8oCsxms5ZsTS4MSZJY7uACY5Iklut2zVUpZZGCnpdl
      icViYaku+SD51t23T1pri5wu0nSNxTd3An73uU+UdPuhQzUy4/68BoSuQgRiVdFaI8wLc9yu
      NaBKBSHMKXCWZ5BVY97sYsfPW9z3aMPjOF5S4lyKwyflli7g5WIS+dTQ78SFfpH5dNUlRRKA
      3UQ+drLju5RUa+NGEASBFUmEMA50/BSZgIQXovqc+rt9dI2ZuFS/38fZ2Zl3ji6i+tomp8CL
      iss53LHQWcd4PH5hJ8llWRodIAojVMqIQHRYsijyVmVuv39eJeZ8MqllRg3Uk68YJymKwmtq
      dZXWLiDlygz/zUXY6XSKLMuQZZkFfFd2vmjBu+zI/HdCZDoFdYs7L7L1c0c3OlDzAYHW2lqZ
      fIDZRcV9ohGd9/hEIfrnrq1r6CBb/0VicReR8ukA/BSZK+i/6lNlpRSm06nxBZrOZ+ilPdKI
      UZYlhmkfYRDYjvlGPw8SCCEwnU4xmUwRhAFCGaCszCaPhiOkaQKttQUaTiHcDesST7rYu2+y
      /CSVKKuvn1XIxvt1P3MdhpzEVo2TOBM9I9merDqDwQBra2vWkY7GOx6PMZ1Ol8yjbttlVQHa
      POv3e+j1ejWlF1CqspzXFb1WFXLPEEJYncanH7iITu9xHYyvvyuGzmYzS6h4HfpLug9xzp+3
      5Hlu3TmswLUxXsPR8TFkIBHVp4YnJyfY2NjwUpfnYVGDwQC92rRZKQVVKcRJ3GqDjqr5by5A
      uv2tonYXFd/i0+9uwAw9596oHPCGw6GlTkBbyfb57rh90zxcBTaKIuR5bhVq/v7Z2Zk9aOJt
      8PFJKVEWBc7Oz6GUwtFx7VukNeIoQp4XiOMIWZZha3MTSZJ4OVbX2rm2/lVr5yIKL3xtfAYK
      X99c1EzTFP3+xQE6tEZc56D2QtQWHghgPB4ZsSSMcHJygizLsLGxseRM1YX19Pd8MjFWizjB
      Isssm4fWyLMMMggAra1d1h2sWzgi8MXxLapLoX3tdG2G267bHynVBKTAsmjE2xkOh5bVcsCh
      9ieTCQC0ApKCIEC/37f+NG4h4J/nC/SipJMzxXGMjfV1I3JqjV6/D6015vM5emkKrYF+v4/x
      eAwhhB2LlBK9Xg8ArPjhrnVVVUsn+l1WHB4YxDlCl57yPHtLfy86VNNaWwsdSRtpmiKKIkt4
      w/FwBCGFcXOOE8RRjLIsMRqNMBqNrL2WOuYT9cnotNHz+RxSGsVuPp9bRy2lNLRWNliDT5q3
      6VsIl837OIM7nq4N8S2Wr79Vm+SGJ1Kxrsu1zB6GIYo6QIUX2kDuOkCARdYxrTVGo5E9RVVK
      YVFk0ACmmXF3tm7LbH9Ihh/VG15VFQP+RgeZz+ctJzc6mymKwiKlK/f7lF4XBnw6iA9Z+Xef
      KLpqj59H/OFITEjQigdI4hiDwWDppTiOMZvNliKYnkcuX19bs7+tr429dVwxxl20VWKNj8q7
      wMrbdRU9tw23nm8D+XhJ9uROVtQWiQLnkwmms5k93MvzAsPhAJPJFINB38reVVVBBgGiOiAJ
      ALY2N1t9t0y5whgqkjAGxDLl9Ylv0+m0JTZRcQE8iiIkSYLT01OLnLy9LuB3ZXgf5XbX1RXd
      6HsXgXWf0XhXFSHMIRjnYqS4k5gpJpOJdhGAZLrzWob0YbM7wOc5yOgSP7omzp8R9vJJu0Dr
      jm/VOHj5ed6h8fOgeF+ZzxdQWjXB/4E0QAiBODaObqp+l69xWFtnfNyuLEvIIICAkX9pY2l8
      XAegv6PRyCIAtx6RCMDXjR9AuqUoiiXL1POsmzs+31/eXpcu4WtnY2PjQt2BvGR9RBAAQq4g
      cPm1qioMBgNrcXC1eN5QF1V1Bw34TWJcJnTfk1KirCos8kUNPH7ZswsQVwH7L8J1NAParnED
      QL/fa7XJ3x2Pxzg/P19qu6vfuA5q0VpDwJyd9Ho9c1BZEwRO5WlsJOtypZV8lnh8MZWuOABy
      uVg131Xc3Fena625CHcRzPHnXesXBIE9cOUEu9/vmzDRyWSCyWTSOgzhrNP17Vg1oa5B8EH7
      gNwNynbrVaoChDD/PH2tAtxVgOUTg7r0ER+Hot/pPf6Pt+mO7+dxCCMfFt5/FEVWt9LaKLZ0
      7M9FCvKBoWcUscXjC/ic4jhuZboAGqTg/Xcp/l1iqW8PfOvmlotgzjcPX13KfMJ/J/E+BNrB
      17xzknN5IcXDzW1jPwOoqrIVFO/WcSfZNUF6FocRAhmgqsqVDm+ubuBjqfT3In8jjrSuqMD7
      c5/5xuCua+faedi41iYmgP9OZwZRFCEMQ/T7fXtwBABra2t23lJKnJ6ePhfCGY8AjcFggCzL
      LPfnJ9s+XStJEhsPTIo1P/nmc+cilo8A+X7nhdchF46LRDEXOXl9SV6LrkJBfhQuNkspbcc+
      7MyKHIsiR1EtB2e4g/ENsGsCYRAgjuKWe4D7vg+ZVgEwr7cq3I8QySez0rOL2LsrQrnAbnWA
      +nTYfc/9TG1VVYU8z60Zk06KieoJIWwuoa61p3J+fo4syzCZTLBYLLwnve7cyOJHnIgO7XzS
      QZcxgq9Jl+zvIg/QbXrtet/9OxwOES4WC5t5gBdaXG4zJW9O32JqrVkGsvag3Q28SF70AQqf
      tHGn0KBHUgqrbPreoaKUwrQ2Jw76/drSIWoqF3jPJXxz4XoAF4Nc0YEjzkVci/4lSeL1y3cR
      hcdP8H5dgBVC2Ljii0pVVbZvMjj4iEEXBVdKecUSF/hWcV4fjPj6ep7SBQdEZBaLBUJfYAgA
      a0GYTCbWY5BMR3wyVPKyaAG/BurA7AqBNFnLqDzPRLTWKGrXiZCJU0EQoMhzlNqYBO2kghBx
      sByIwYF1Pl8gzwsrSmVZjuFwiMViDkBgeyvxilg+AKQ18lF0Xt8VtS7adO6k51sr+p5lGcIw
      RBiGregunzdlFEXQAq3TXorlDoPlVJPc2ub6/1B77skxcVHfmriffWKUO9dViEbF9WJ1kZF7
      qSZJYk/cq6pqDiEBs0mTycSeClIJgqAGkIX1TnQnbSlXFENpZXxQAOS1M10YhAhldw5Nt/CN
      L6vSHCbFaQsBpJQo5lOoQiGITcxCUefHTOMU0MscRgiB0WiI4bBt8hVCYDwaLgFu10Z0jd/H
      orve4X1xMcrXL7d0UCExh6w+hABAt4KaJgkOZ1NnTUqM4yGqsvKampMkQRRFmM1mrbiDLrcJ
      d618J75d6/LzrCPnlpSPiMZLQS9dfkduuyFF7gMGo1wKQkfzWZYhjmPv8Tw1moQxBAqbDDcM
      gs7Eq76J8+dCCKRxgkWeIStzm/eSFicMI5SihK4URCCtCFbUCXx9ba9COB8F50DpiydYJc51
      yc2+jXXFpFUcg54NBoPWOOfzuRVhKFDetRz5xrDIMkRBaCkmF3vooG8wGEAp5T1M6wIwio7j
      kX5dcOCKyM9LKIma097M53Or/9Cc+V759kuS/E//fIWwjTfmxobSb5T5mTaWuuvCeHcB+Hcp
      JNLYjC8vi9bzXpwYsUoIqKoB1KzIUXS4zq4aAwHWKsp00cY8L/Wn9lwu0CU68HERwJOHKyEP
      d2hzU8aY34JWZghqO6jTKnb59ZdlifPzc+tS7q6BlBLj8biFkEAjgvCwTT4X39r4nrv6Au+f
      goHW1tasUxyPpW7PX3pjlaWU0jpt+ag7HyDQuAFwgOCyWBAENkOcNi92AlWXaMEHKYVEEsat
      LNU0odFgiDSOWyIPACyKrE4ZvgxIF43DpcI0Dvrr+7yquEDuFp+MTcTF5Tp8bCcnJzYw3gUy
      8u/hJZASl9Y2MEh6JkN0GNm8rhfNZxXhUEphMpm04ouFMPG4PmDs4oy+edJvPsJM+0PpH9M0
      xcbGRiv4ye2Dp7On3yUAmxeG2JyvUCcka3Kq5XKPuGY90rNxq9i7O2guGrhijWX3aQ9xFBku
      wBbbvafAxwLd4mOR7iJS8QVz+ObK6/NxuC4cvjXgdX2UkwDApZik5LnrTS4WhABJLZ4+DyFa
      VQhu3H3zvc8RwkdQ+D7x9qiOyxF4dJ8rmbhzorBU/puFWjpU4Q5wvoWIogi9Xs8mYSXgb00G
      AkkYofLY1l0M9C1uFyVw61PgfpqkGPUHgG7ecxHmok12iw/Y+OeLjuD5Mz5/Kl3iZpd+5Fsv
      K3bWpmq+ZpQMyh2zu1cuwvvEPBcgu8oqfy7A6AUkcnfth5u9wQcvLix0RetRHe4K4iJIaxco
      KHlVcAQhAcl4LpWi7yEBoFh+35UV+TN30egzXwh3oykjcT9NEUBCK7WkM9A/bpZ0kZOPg+Ro
      39j4+J4XoboAy9e3T/71IZMLvO45Bnd1puLO6XkPk/hZh4+7uW363M4pRTtvy51/WZat2Gj+
      l8+Z/0axEz7CrbVuRTW6ptPW7IUQ1p58UUmSxmbuRi1RMbfGdNuyfSzLN2nfpKgQu6cj+16a
      Ioli5GVhkaBSfo/WLhmUnvk2yH3/eUQIt+7zIg1fG6LgLlJTe3RWw8cHGOCgEEAANtiF1sVd
      Gz7erjn5bphxkYOvHSd2dMJMv/v6+XmJC2CUX18OUkq9I4RopZSxiO02JIS4EAGEEPY0zQck
      NPBenCJwKIyvrkvxCFvdd1axOaKAURSZRLDKbP4sW2CeL1rB+HwRVlEZ/plvljv+VeKMDzB8
      /fjmxIvPE5PaIyWYQgTpcGwwGNj4WvImDcMQMmgU5rzMMS+y1vpcND6ttUUkHxfreofP7XnW
      1SWurtOkW9/n+pymqT0J992w80tlI+JOXasAmwpNSD3HxnfJk10LrrVu5aQfDgbmko76TGKR
      L+xJ9Sou4xObuqi2+8wVWWgOnO13nbxzBOGGiC5qyH+nTGuA4czD4dAe9ZMIRDEC0+kUcRSj
      UiYFjtLLmd7cdeZzJBG4K5jeJSxdcODOyV13Wjt+J5zP5cRdC8qwQYUkhDAMvWLZL4wAQgh7
      4KLZInKN3Wf/rZRCWZWd1iZXrKC2nrdwKlnqRi/RQCe7d+e1avO66l/ECboAzH3m48AuglE9
      KuSawNMdEjHg0WSz2cwmoIrC5rymq7jWHD4On5Twi6yb+9ktvna69DiCOeJ2RBwWi4UNX13i
      rCtHeUEhrHKBwN3c1neYGwvzqn1Y5QMQjlhdZZUnZhSEkDKAKs0JZlGVLTbKxS0fVeGL6gPY
      VSIC/VVKLVk+eB2fOOCuHV/vrlBFyiVEXJlEFF4oVSN/nkYxwiCAxvJchDAek66LDAXUEFcB
      YBVwV7z0rV0X13R1SR/i8z7osxsHXRSFTepA3sMkGbjt/NJ56OhgjIKN3U1zFcZQBiiERKUq
      VEp16gj8DKALWIDuy/GEEPawZ5YtoCplrn11KNcqcagrPK9LHPK1Q9/7/b7XxEwb6KPsF/XJ
      x0m++1TXzT/qFgJgoQWU1qh0tbTOQgjM5/NWUBQA69pA50L8d5dLdfXvm+ukptLknsMPVIM6
      btp9z+W6ZOWRUi4lLaBgfy59/EIIQBQzyzJrhqRjeRoA+WjQwQNRCyEEoiCAEHLpvlm+cK74
      xIHABUjfMw6QUgoEMkRVVtCR33fFpbg+OdXt06f38DpAY3v2ZZBwx+xSwi5k8LXDZfIsy2wY
      oGtxcXUQpRWgjbXa581JMrUr4iml7NkDz+3kjktrbcM3KW7AreOKTtTnYrHAaDTCYpGh10sR
      14jo4wb0mxuqyv/y3Kq0Jr8QAhBloIOWyWRirwfS2rj0roohjcJo5eb6xKFV34Em1R+djPLr
      MEMZQMoAUsiVt80/D7W/SOwhGZ771XAvWndT+Hw41+sCdN8atAC6NjWura1hOBxaqwgHfi7b
      SyFRCQWt27I1VziJInMiQWluCAl8Y6HxlmWJfr/fcqfn9Qlo18btDCL0fMTcG3xrwH/z6Sau
      mMTLL4wAvV7PHoZpbVL7dcn/9M5Fio5LZbg86f7GN1FrvXRTSssTMjRxriIIsMgzhCpAEide
      YOyar49SdRWe63PV/Hzz4vW7RMlVa0drk+e5NYuS/Zv+UdY5ardSbZ8jnxhLgfxaa5tpgpsV
      u/QWCqI6Oztbmteq/aXCD1hXrZvLRUkfcuu76/YLK8FSSgwGg9bESTlyWSIB5EWnjl0cw6e8
      uG1x1qe1htIKRVmawzA0CnsURRBYDmPsUsL471ov36DI3+8SiVyqfpE87x6A8T5W9e2ukUuA
      tNYtSxEpzlpryMA4RdI68aRlhNCULA31evL+XNMtB0jK5dlVfISCP3setxHOPXl8xKqSpukv
      pwQTQJHbKw/E5oPk7MdH3SpVoayq1lWrLsb7AJIXLtoIIaAVkJU5pJCIwyYmNgpCiLBJkOQb
      JwF6F0Lyd/gY3dIF8D79ZlU7vG5XcakpeYnyS0gAtIwVs9kMWWmi9oRuUjVSziG+BsThaY25
      6EM+YT4leDAYIE1TKKVwfHx8Ibflc+Fr5xOteOEwx90p+Nq5a2vTo/8yZTAYYDwe20WgwWpt
      AuQ1tF0IerYks9Z32lJdn9jEWbgPSEyIY5MoSkrjjxQEtcXJc7jU9Z3PwaePdG0O5xAuUPtY
      fVc9X7lIhHSfkRjkci23v0CQ3tNYq8ivxiUA5IFL6RMBwwn4HQ+uSMYtSClLy8j/uuvsiold
      67ZKJ3Ljqt0ipTRBQ74F/XmLEMLeUM4HWpSl+VfnZ3TjVmmRpJDQ0Kgq/3G8rSeXg3BogzjL
      1lqbYJoorqPUlpVon8jgPncVJ/pLAOU6iNE7XaKQD5n4mPl8V4kzvjq+wuVhPi/+3BCJ9nPf
      BR/0XCmTMZAMIEK0rUD8xJui0uiZq6MJ0bhou2vszt1HbHwHYj7C4r4HwN6N8Ku5jwYNu6P0
      02V94QYFtud5bvPGkFxJ7yVhhEovU86uDXYBoeuI3G2Pfy/LcklO9MnMqyiN7zc+Jre47ft+
      52268+HcxRe871s7VzTy9TnqDSClbF1kToqzbw7Ulwv87tqRgcS3Zlob86ibP2iVyOmuzao1
      cPUQlwgRAv9KbyYjrI+iqM4EYQ6ipJA24iwITPqR0WhkM54FQWCO5eGnyF2/ESUhds0pGf/r
      a8d3IOZbTF9bPjHIHRM94xvqQwpXPFqFYKtEA9/GryqcU0VRhAd7X+Hxk8dWR7goRcwq5KPv
      5J5B17nycZHb/SqXGBfZfHNw++fv+Uyfbju/Mg5gGwxD659PzlhUyJpAgfZkS3aDsWkiq6iW
      W5RSz3VXFRXKKOD26ytuv0ThXYR73vd/mSKlXEpc8Kto/8u9jxHupfjj7/2JV/xzZW8XqLrG
      QEDuUniKa3bHzym7T+yh7y7B4O2uInzuYd6vHAFoUETdyXpAEyYFZbFYIE1TfPrppyiKAueT
      k2bgNH6XkHX8rtkjCEBA4NLGllG6oHF6coLpbOK8AWgNaGVMgIYDua1iSX/QeH5W3TlAreEG
      CgFAvzfAxsal5dfr+uS89jz9+jjU4ycPUWlPsJMGrm29iu3tbev6QHfsuqIgB7CwTulOegP3
      U3KBzWcpukic5PqVux5cB+C/d1F7/pnmIKX89SAAdUj++XRtPR9EVVUoigKXL1/GZDJBFt7H
      9tURvf2cvfgxpKoUFgcKWzvbAIBnJ1/j1jsXS3susLfb98ixHUjyi5b9B1Ncvfqupx+2aQSI
      WtcBR23KvEr/uP/sfWzcWkaAIqvwaO8rPLkf4s7lb+PmzVut3EDEubmrC4mypMuROww3P/KM
      FaQQ9/v91j3BWmtvqnYuxrhA7guicvU1Onnm8QH0nLf5a0MAKjRYmjixKRrAo0ePcHT6ELrs
      I4ym2Njs18+65FgDBEq3LUZSGt9/wFD1LM8wrxWdoiyg1MXikeub1C4rbPArnq0qWgO8S1Wp
      pdQj5vZOAa0VAIGg5laVqqC0Xop9Vlp3ziPGGpQ+BKBbSBvGEruvGoPA51/8J3zx6O8wjLfx
      zhvfxFcPvsLhswPsbl/F9evXIaW05lA6NwBgs4u7gEl6oRDCeqLy5Apaa5vpmv2pWV8AACAA
      SURBVL6312hZ9PK5aXNuBRh3cEK+IAhagfMc2X7tCECdJkmC/f19BEHQunhPo0Khpzg6PMbm
      7fUazpgDHFzaq2HmKGDFFNF8NqhTs2oYAPKZIYV5sWlVa6i6rZ+HnlOLS7yD+qrb0zQR5wVN
      860fKa0gtGt5AoSU0EqjKErmy6/MIRYayqmqCiLwZ+Irq4ytk7Zj4et89bVhPa5D/NUHf4b1
      rQQbr/axd3gXH/37NfzB73/PRpzxewN4girqm3RBOzaPr5MQwvpw2bE4IhLBT5fSTO/0er1W
      HDRdK+W6hvN1eSEIAJhF+ejzH2IwGCJ5uIGdnV1IKXH1ynW89+438S//l/8ZT58IrG30W4MU
      bILmO7cIMGDV9E3bOmlS3zzuQKdlhWjT9S4b8q+iCFH3JZzfGBCiBkohPcFEqnYnZwBF1N8Q
      EvNuqSpAGCc3Ph/jXhyBY6F2OAEVXY/tzrvr9pe1zR6C+Bx/9uf/KzYvb+Lb7/1jbGxsYD6f
      Y39/H7dv3146PwiCAGdnZ/amoc3NTfTry/q4GEMes67DHRVyxuOmc5+liyMR14G4PuOWF4YA
      QggMxhF2b0mcHj/B/YM9BCKGVsAXX0VYLDJ89tFjvPLmLgQTYWsCCSFkLQbU7XX1UyuK5Fbh
      UsgGkUzbUoileGENPxJoRr0tGDlijB0zGgTWtazDGUCzLk1dDW1TCmZFjqqqkEZJ67rULuQk
      pI9rXycfFRU6aMldJCrROnDq2/DTBkWG4wTv/ROTiOxHX/xb9NRVTNRjRIMKX/7gJwiDCP3w
      MrYvX8HGxgYODg6wf/AYB08P8Kf/5T/Ds2fPcHx8jN3d3WZM9b9+v4/JZOIFVN8l2T6z66qY
      4a51e6EIkIaXUFUTjNcTjNfbdubLd0cwN0jqegNr1g+ARCJZiwGr+gAApUzdvMhRLEqEQR/T
      83MMRvXBFwGGEBBSArVPPBUudum6/irFXC99aKrrmpxaxdQNiGEtK6UwmU4QBiHKqkKlK/SS
      FIPBwFDRmmsBJniErC9CCOvrPh6NoOv/jMGpGdTu5i3sHT3A+HKvNRvCQVKuUXMUAQEI3UZ8
      YTjU1TcH0PoEG4Lf01vg4Ku7mD+aYmfn9/CTn/4IaS/Ff/HHf4IgCLC1tYWiKPD48WP0ej1c
      unTJ6gmU4hAweuN0NkW2aDxWvevu6AduXVd5tvOt6wdB8OIQAADee/s7+Nuf/Tl2bgyWnl29
      PUI2NcErLeXQQogwwO+yP4/MLgVQsNxA16/fwUcf/xCvfSNhdBk2CASt5nxCAVFRz6+i4QTW
      KsSoLkA3pZtrnpZQif2gtUkJr7S20XL85hXr8FcD4ny+gJTChl3yaCiljDIsZNPb5uVN3P04
      gbi8LO7pmvgotIFG1oMziIGWAULUv2ulMXkKbIR38LtvvI2N9Q0AwB/94T+15yzEjaIowvXr
      13F+fo69vT1sbW21MkyQhWYym0JVCmm8fJUuja21Fx6OwOsKIezJM4laSZK8WATo9XpIwnUA
      7YwCAgI7V9dx75Oj2uphRB5SZF1saDZZmTA5Ju8BzY2MoTR5SrOygEQfRVEhioKGujOgNd2I
      JXFFANAk8miSm6kuWuJQS8cVAloZy01Vlc3TuiKnqrworaGqEgJAFMT2BJ2SE5OTWxTFGA6G
      S1YXmwWNReDx55EeAZguYXMzHBKFFLRo5mURxUGQqgCqw018950/WLpulwcezedzPNl/jO2t
      HfT7fYxGIwyHQzx9+hRHR0fY3d1FEAR2zIP+AIs6gmwV8Hc94whHYh1Xoskq9UIRAAB60QZU
      uQ8ZEhVuZL6yWiAMQsPAtbYmPwISAdFK4R5IuUyW6yKEiQkGAClKXL16A3t3P8LN19YQhkHd
      mt/k1lBzAda96UpzLbb9TGuBRpfVDZJANMP0cRE2ZnIJoTWplAJYqg/azMViYQNUyEpCYtDa
      +lqdEGD5PCAKEgDTWhfgI9D1fAzyKzSfuUHCSEhmncpCAYfX8Hu/+Ued/v5aa9y7fxdfHfwI
      xTzAcPCPMRwO7Ty2t7dRliUeP36MNE1x+fJlgwC9PlSlUHrSr7hmT34I5xauO/GzByEEJpPJ
      r9YX6HnK7Zuv4/gZU3bq9R+OU/zGP3ylqShI4KSNMJ+DMHDe5fJLs1mlqjDPm4RP47U1vP7q
      b+P+p831pJSfiMQeu6iOZZ9k46IszaUd9ak2mf7sP1LSHcTw4Sj/vRa7IQXzz6ktPHTwRaew
      QH22AmNP76U99Pt9kH09iiJI0bYg8c+BYFndNKtT22ElDaxlneIDN67mqtRQB7v47m99byXw
      //TDH+Fw8QFCOcAf/f5/g+3tbdsumVDDMMT169eRpin29vaa5AEd1N89CPPdjEPBPtQXpU93
      RacXjgBpmuL97z9CNi9gVVzagI7iWgYMQHIaZWvaTxyY6HMQBHj1lW/hqy+ObLu+PprfDeDr
      uk/iVtQ3tKHQpLybDNWr1OXl4urXAg3CrZJzR6MhBv0+BoM++r0eer0eemmKtfHYpDnRegmR
      AUBXAZRqzljs87pp7rLiX1mB+aREePIKfu/bf4yHD7/G3/34B60+yrLE3tcP8Fc/+HOowUME
      ocTiPMCHn/wYBwf7S3MigB4Oh7hx4wam0ykODg5aQOyuAREEbrlq1nSZs7tRYi/sJNgtcRzj
      7W+8gcV8gSStT2eN/FAPiqupTSGDnDVT1oK0rkUOd8MCKdGLEzN5KaELjQpGWewn1/HFx/ew
      fXWM8Vq/aV+TYMQF9MacKIL2qIJAtgAslC3iuTSPJetSXaHuxf5f1I246VK4PEy280W2gNK6
      Fh1Zv0xm5/AQhhGEJIS2lZlCr1s70NZtNM6ezTHZ62H9RoS/ef/for8GzLLAukp89OlPcDj5
      AhtbKbZuxwBCFHmFSzcWCAdP8NGDLyDEH2Fra9uOqSgKPH36FPPFBLPFBKdnz7C7eRtbW1v2
      0I3cJegfF++4KwX9c03Hp6enrfsBALMGLxwBAOD8OEP/UoO9jRLZAF9jBmWUv/5rFWPaWQ/J
      5XZwcwgU2ICba9duYHy+jnv3PsD4W32r+IIUXMCCo0Dtcq1VW8mtxyCaDpsxPg8GOI+EEChV
      fbIralcH1b7lxVI7ALqOzMrzHFI0ogtxRxKDaCx5aeTf0WCMo/MCvWHEBsFNUe3V1vygQwPz
      Y413f/MKhJhgAENRT4+P8IMf/xvs3X+Kd76zjaub7ewOcRwgTkJAA7vXx/jo3v+Ly0/vYDhY
      x+GzJzjPv8Z4M0QUBwh7ErKaYpEt8KO/+xFms3O8+41vtm7PXObUbc7A/1Lxvftr8wa9qGzt
      rgM4wunJDOO1nlX6eM5QAn731M+HNFSoXlUpVKpx+pJSIq/agfqj0QgJOyF3KTMhT0MRqZYV
      jp33/IIPN+kKD/BzEYj0ECkE0qh9TmIQsN2nUs1NmZyySbHsJ0961O7uLvY+legNa8WwNKIo
      cVBO8UVNZFQ9OxkECMMAUhJnNH1cu2ns+Ze2Unzx+dfYvrqG4Ti1SXjtmOux7txMoNRDPJ3c
      RbIZYSfqtZTtja0BsvmXkEGF/tBEoI3HY5twwa5JR0BMGIatm4woNygP0KFnLwUBxoMtfPTl
      Zxitxzg8OEWaRrh2cxNdioCL3QSY/DeAlFqNMAowmT+DEK/bOlq3xYiT42MkvTbyLFFbGCXJ
      UhU0iMcVtCXRje3JCtUG9AJVD2SAfryczYBEotbYSBn0EIlmzlxkMqGnSiukcgNCGGOApBs8
      qZ8asAUA7aSegebiFCGMtZchSSO88+4dnBxNcPhwgrwosL41wGCYIGiJj8YqZg4mG9KhFfDs
      YILReoqkFyFJI5w8m+LLe5/j6OgZ3njjTYxGI6szUBYSyoVE4yRA51d5Ka2goOtzEw1VGkR6
      KQgwHA7w+rs76PVjaA083jvGYlEgSUKP2taWHBbzHE8eHbeQwdRpvzc5a5yv8rKA0o0HqtbG
      5eDg2MNZOBKYB7Vi6/f5bP3G4FQ4f02/5g23DxqX0sbfhUQYpRQqrSCFWLojDagvwNAKqlwO
      LKH2KANfpSobe23O/kyfUsola4si/YCJmarSePjpOa5u7bT64rqErjHn0uYIlzbNlVtPD06x
      9+QZglBiY3uA4ahBcFUp5FmJ2ZlGiAFCMcB7d34Ph8/28dmn/xnDeAdxmkCJOfaefI40TfH2
      2++09pHiDCjgnu5CIOSgssjzJQ/iKIxeDgKQKQ0wgDda72FyNkeyNYKqFB5/fYyyVBiv9RCG
      AZ7unyIIAyit0OvHuHb7sjnhZPJqW1kD8qsl/vrv/hK/9Q/+0Fyq7VDIJ48f49LWACdHE4zW
      +oZC0YYzmbdj+Oaxrcvs/CuLXkICkukBI7oEYQhUlbXklEVWZ7kGelHSWKRqVt+Leq3b2e1h
      oJTIi8J4jgqBQBtqOJ/PUMhT2NM9ByFpT2ieuv5w8GCCd954FVHcTiXDz2na4phpZ2t7DVvb
      a9Aa+OzjPVRXFNY2+nj84AzFpIenB0f43h/+Ca5cuYr5fI6TkxPcuH4be4/u4u4X9/Bf/1f/
      Lda/uY4sy/DkyRPM53OblI1CbHksc5qmyPO8nRUCQBgEyIqqpSgHv86AmFVFygBVbqVtDIYJ
      Hh0d4fxshkopXL15CVEc4tn+OYqywu03drwApp2/ViMQQJyEWNsSOD45xsiTci+MIuw/PEUS
      bOPg8SHe+EZtlRDCMnflYIAF+LYaYMewCgeasbY9MLl4Q9Q0DAJkZYGkvswOGqi0uc3FzYzB
      o7D45gLmskLXPHj/wV2sX18erXY/adSyvxmf1kCWFRYBfGLXsuG0sQlLIfDG2zdw94uvkfZi
      XN14F2985x2cnp5iY8O4TlRVhSiK8OlnH2LrdoWt21fwwd1/hyvj9/DKK6/h1q1bODg4wMnJ
      CXZ3d21ittYYhMBoNMLp6WkzPmFS5OS12JOEEcL6hswXfg4AAFm2QBjJxogjBK7duowbr27h
      1mvb9SJrbO6MsbW75gC/OV3lAGV+pQOsxia8OEsxHq+1+qYFu3L1Kl678w/x6mtvI43W22ZB
      NMooiShts6HplxzHqLj26Fbh5lu3CMtIrCsIeWqG9f2+adS++JoUOfK1cU99XcCnb6+98hbO
      766jyCurGNP4Go1cMEJgyqUrPRwfnaNFbhiycZGUIwchEADkWYHjZ1OcHgA3rt3BBx98YIEf
      AIbDIeI4xvH5PibnCwShxO7NEebxZ/j++/8nHuzdw9bWFjY3N/HgwYNO278QAmtra60zBCmE
      vSKWG1teCgLkeYYg9GQ4cAXqmkVTIfZPQN7yS3HsMNmiwKi3ZS1Mvo0i/5pbN97E3r36cIyJ
      MxqNNcTKxM6YST0WrD4vzW902lzPjT1vJIhG1ud3+NK4XWrn3gJJ4/KZAknJDcMQd66/jWxR
      toiFb8R8Qc+PF7i8OWb4rjvrLrVZb22vH6OXJrix9Q38X3/5f+C1119rVfvZz36KDz9+H1u3
      VR0XYta114+xe6uHzx78EEKYAJo0TVvcz01A7B6e0u9JFLfW9qWIQFkxQ88CJNDIoQwzO2Se
      huL7RPTm1/2vz/H2K79VnwID7rVMHGDSXgoUQyu7EpdhA8TkfIEnD4Bej5S4ZnzkdEevKKVQ
      1vb8kPyZ6le01pCQFnF4GaQNt+qUy4Wo3aanGI9GNsh8kWVI2OV1PhGFz11YSt82JrTWhwO1
      Mm4o9TerKlEXklhYqy2yKJnvVamxtX4HxyeHuHr1Cgb9ge3r408/wMf3fghUITZu7XjHHcik
      cYKsM01zDkjpcex6DgaYTqeoqqo1P17npSCAQg5L4R1F1n5rmf3YX90srq9IITCf5QirrVqR
      RG3+aztLWfOgkKiUwpXdO/jyw89x660UEW10LWo9/voE0BpXdt/ExqVL9fia/ntx0rK9K62x
      KIwveygD65TXzM2IT3lZII1iaKDOz+lYVxxxgt6VQYDFIkNZlsiyDHGcoChMNmhKMd4F/C1A
      5wq/XVXNvzRzUgqLWYYkiWAIlmtX8CAQuHUN2H84RRJfxtH0Hn7nm39qx7J/8ATH2ee4+doG
      pufLXI26CdKFzelKKRxJDzAK/tzGAANNJjq608zHJV8OAugCFMJHIscyI7YCSBsZ6oV26ws0
      CubhowW+8dbvIIliZGVhs865RaIOjBASg9EId26/ja/3fgRogTzTCKTJalzmI8ymZ1i7A4RB
      iNFwiKOTY9Ovw2rJ9SIJzVWtpaogKuOZ2pKTAXtTe5ZnJjBHKQgpIUVbV1hCAqUwHg0xHI2Q
      ZzmqOvveqnu7+Phai9ZRGvOy+f/OzTEe7T3G8ckAN2/tWgWci2ZczGzpAfXYqqpEvH6KodrB
      aNQYJh4ffIVLO8YlZbzRR7Ob7UJnOYBxqTk5ObF6F10Hm2WZzUJBCQb6/X4rPTtf05eCAHnB
      In0cUYMXAWnFBiocMZZq12JUmQVAHTkmhUBV6VqvE1YkqpSyKb6VVghFgF6/D2TbeO3V16A1
      kCQxIATyMjdWkdpVgTthCQBlVVm50sqWQYBKVSiqsg7MD1tAQVdDaa2RxLHJoVpVKLVCGARI
      wti7YQBwcnpqWf4iy9BLU2R5jjiK7Cko1ef6wKr09LreA9Jr2ohiuPXWzSGyWYGffvQ53n37
      9aY9ARupZ9dAAFBtAnHjFaPwRuVm06/WWOSnSKzSDMuVeMim1hqyHNhL2il2ADDWI377zGKx
      sPpRr9fzpm+ktXnhSrDWGpVusjg3FKoN0MYrsTJBJdpEHZGlosvQQth0440UH3z0QwBGxKF+
      BQSm51NMJzNMz6c4PzvHdDJFnlHSVuCNN99EkqYY9PsIgxChDBAFdfa42jJ0ctaY2Hxem1Rc
      pOBrQO/kpbnLmNZCCIGy45pUek6Ad15fEF4U5jR0Nl+gYIc/rQO3Lp3AqxuRYiuspEr/kn6E
      rdt9fPLJfUDDJjcm5zz6Sz5UNF4ay9HhBFubjYx/cLAP0Zs0fXrYkoDA5CTDW3d+x94Kzwul
      XfQZOxaLRSslCj2jHEUvnANUVQXIEkDUYvMuZbeSvgaaYPjaPUG08ZZbbgCjrPVr11fXdzxJ
      E+g6JK4/6NdskpRkA+CBkCiViSgDDDU3HCDHoD/A6flZazFLVSHUAQIRLJkDe1GyBIgEjFUd
      Q8CBRNeT19DI6wCOsqosIKZxgrXx2PQzGrUUvyRJWl6TvM9VhdvLreLDLHDN+Yf5HqcBtl6V
      +ODjT/H266/VegFXJ3yWpVoRXvSwublln0ym5+j1GzAUjuUPAM5O5lgP3wag8f/84F8DUuNb
      b/yxFcNaHNlDcACTWYIu/yAXCeAl6ADz+Rwyqpgkz2V8BiiMXUsRmhSGsnGYYzUdPc5YSXrp
      WiOLWklWQwQCIgjQi0JUWiGIDJWOQxOITgorTzmyKHKrL5xN2hnupJAI60v/qL4r//K/WmuU
      VVXH/rYzllEJhMm5Q5Yk8vQUMKKGlk3bPDN2EARLibXc4j2raIxUzKCLNhxyq5AGZCixfWuA
      o8MzXLl2udU+3xOtNZRquEoQxK3xlVUBGRF/0bBRdazMJjl2tnr49MEPcPP1dWgADx/fw7Xd
      O0sXdrvGAyGEvb/u+Ph46Y6yF44A+wePsLbeqxehtfLLhYn65DohiUpqNAHfrQ0l2V8aP3kp
      kUaJtcoYBdQsMok2WmvkZYk0asyILU9DDVT1ubBLWeMwtLZ7Yq2u2MI/GwBsKL8RFZpDJ0Nt
      DXcIg9Da7wkh+cZSffqe57kNjbSr4eEE+wePcFwsMD0u2uvetQ8dRSmFWEtcsfPj1h9qkO2M
      BnpR+2ASWqCqVG1ipQGI1js718Y4nL6P7RuJHWZWTuxVr760KfSd3Cbu37+Pra0te8UTlReO
      AE9PHmDjWoj2JDsUW9F9HiClsGy5a88oiRS5FxdVCekAk9IKJV3tqpq7aem5XcgkxZT53NC4
      y6pCIJurYCk0j9KMu/XdQ5pASst1irKw5wlaayRh2EpwxduwS8SoHV1alyQJFtnCyugu1S+r
      DG+9dcsSFXfR29zLt7oNK/jioyd1hBmNp12HI+r56Qw3d77Vaunmjdv4249/hs0r7ArUel/5
      eUJ/mLChCJR6hjzPbYY6H9ej/VBK4eGTr/Affva/Y+/oM1S6wLh3Ge9d/+6LRYCiKLCoTgAM
      sKz0+Nk2LQh/SuKorlONdDF8vukGCeJlYIJBCKVzmxyKTGgcYBc5pRU0p7WBlPYCPgBYZBmm
      0xmiKEKaJtZN18T0GoStlMJoODTKdWAsUE3wvLmHKy8aFh2HUeuAiXyBghZQ1xyPeYtGUQQN
      YNDvt4CZ+lkfb2E2/cp6Zi6Rnk5Zfvn3KA5RO5Syl/0ELcuWLyXp9XqI9Bqgm3QlsoWwtQir
      NZPfgUpPbQr+Ln2HbrOJ4xifPf4xvn/0vzVRYgXw4Yd/+WIR4PDwAMO1oHa3FS2W2VU0YA4r
      2VoanOh6r5uPd4kOsrbb20v/qtIqqFEQIhAmWsvItgZhCAhLVSErDdD2eiYV42QyQVSbJCkl
      eCAjzCYTDAcDS5Vd354HDz/C+lYTFrkolhXYKqc7f9sxzO71UmVRYX4aY3vzNs7OjyAEsD6+
      jJ2dK5jMj7G52wTcCOeT6FzD5d+loP3wkSFm1BAC4/U+Dp8dLqVP6ScbkPKp1aOMfGveU1UF
      KYMlQ4eGtpfv8TWkPaWAGFJ4v3XnH+H7j/81RMwuzxMvWAQaj9cwe1hiME5qrHYsPh3vUV1L
      +dEEqPtqryouteAKZFlV0LVrQVmVVrRxvUKp1ySKIcoCRVUCEkjjFFIIXLp0qcXC0/q2lTAI
      UKoKAQN+YuFaayRJhEubaXNIaEUlRg114wPVzftqgLwOHDz5AruvjCGEwPGzL/H+zz7B8fEM
      W69seWi0Rwxdet4u61tDfP7p17h+Ywu9/vKtMoJRryQJMT069Y22GXNrDMuHe0IIHB1Mcfho
      gfTN1OoBdBs9xQDQJX6Hh4dYLBb47NH7QOSkWNEvGAH6/QGgeZe6sZ4Als1Ba+a7U1uKaiTo
      lvj9pdP+DYNIlNGB5O68Ks2pLYx8Xinjiw/BKJBoKF4UhPWhl7IiFGCsWMRl4iRBnmVGtCpy
      LKrcyP5B5LnWCSBffY7gJBrb53AJgeufY9Zte3e9fl/j0uYIG5c1PvrJFIf7p9jadRTSZicu
      WlVbbzROMRgm+OF//ASXrw5anMnUbM/h5vqW2xiKaobuC5lYr3W7hw8r/KPf+VObVoW7RQdB
      gMlkgmfPnqGqKvT7ffz7H/8Z/tPDfwUlS85cIF40BwAAodtdtigyUIfhSXYYzilS2+NTs8l0
      FS7quH3OiwzGA9MgYaUqY38vC0ghkFcFgjqiKghCFLWJfCnmVsOeGfA+LFCjQcQkiiHLEnlV
      oJIKgt223mrTmWfTZlPHBS62ip1rAQDvfPMGPv9sD1u7HWtW/697bR0xSAp867dfwb29r3Ht
      zsZSbasVaA192vbJWiwWmOb7GGI5Xaav7H1xjt/9rT/CYDAwZzm1nrO/v2+9QweDAdbX1/HF
      vU/wP/3F/4gD8TEQwMvgXigCCCGw3r+Ge3ffRxAaCkknqXxc9gSRTJ4wQFeVCrH3HjAGQHV7
      2UmJSueeugBtYKUBVSrj8gDU1gS0QhIhTKwuNLC9fRXDgcmfb56JFtV3EY3mTJeJk7wa2lhV
      LL1H1Ltt6WkjO3+P+nAtQ13FIqWWyLISScJBwICqQHO7px2bRp1RD059U5I0xuXRZczO5uiP
      E7SRpCEETydfQutv2XF8+sVPcXm3t1TXV5TSEMUQ49rhj6j98fExdnZ2rAn4sy8+wpP5hwiG
      C5RVjvXgerOuut3+C+cAV3Zv4P3Tv0BvFIEMHAL0txZxVEMxzCNjKz9/WOHbb75nZHISCWpv
      DlFnKrA3pNwQAIyPP4k4dTctYHt0/wib27tW5OCmt0bfAKaTDLPpukUACIGyKpduaKH+OBDO
      ZrMlCs+vN1pV2nWWqTvP47Nsg29m3ZxBmLHdurODvb193Hhls9Ua1bey95IBQtfttesLAeR5
      gXTMbl3wUNwqPsHp2SnWxmv4/PPP8NWTn2KjbF9gAZj8rqO1vnGJqRRUpXGyr/DuW7+Pg4MD
      bGxs4PDwEHEc48aNGzg9PcFPPv5rTKpHOJsd48prI2gd41/883/W2n/XrP7CEWBj/RKS4hKC
      8Bwt+wNROQAI3AQg9cYGAmEUdCrCSisEoBQfjZxM5k7aEb4GMpCI4uYQ5qvPT3FpO8ZwrWc2
      u5bHpZQQisn4QAv4OYC5p8AArFUpDEK7CVwJ5+2sLgJKVU12N62hl0SmRslubP0ccTSiOES2
      IKWwjSwAiXnaep9b9afD8DA9X2CSTTDuNV6ebV0AgBBY20rwf/+HP8Pu1U1EgwWuvTJeGp0A
      8ODuU0yzKaQUkIEhgOgLPHjyMQbxJqSUWF83+s3ndz/Gw/Mf4/LVFD3Rw/Ruo2jLQEDpZvzS
      gZkXjgBhGGIQryNH2wGKK26mMBMa6PS3oXBtC0jbKtJyJSauUiuPvv1rxAuBfrqO+YnEaE1D
      iDoFo0csAYz/UKUVYs8pLf0t6mthK12hoAObmvoLIaGdII6lOVmllsaqrUKuqUL9V6smN6k9
      UGIWFVHn+iezpdASRV7VBGBFaejAUjk6PMfB4TMkwwBXXhk3/ZG1iji7bjS68abA5esCAKf8
      bfNGbxBj+5oTy60BjWc4nz/B4eMe9CMNFUzRG0tcvppaUa2ZrxkHwYAwbL6F6i8cAbTWyKpJ
      bT9eBnbf92VBwU8lG9bf6rFhewyYXEQgBVPJM9zc/W18/ukH2LopjIzMZG5VZ2gIpISUAkmU
      oizaHpgE/Eop5FUBqUrjhg2grMraEqYRyCYfPo2VNqqxrbe5CXE3JapajGIiV61b8Lu4GsXZ
      IIPWjYvH+sYQs8kCa5cGxBudPWjE02bd27sxm2ZYv5KiP4obQoEGyGgrCS/6ewAAIABJREFU
      zbhdka5dlntvbVBdRyDtR0h7hQFm7dqP2pyOEJBkAs0GpfGSEKBCXkfiEaALa3L0vGE3fZn9
      +haze4E1GtHJXwQu7wzxH//6L/De299FWdxHkpoL6eIkwsPHH2P/mDwfmzjhbJFBa4UkjZZ6
      bx/U1PoKGmAmXQMCOJ8dobhL4li7SCFw6xVyIxbIshy9Xg+VKqGVtv7xYWhyKy3mC+sHAzTn
      DUVZIK4DcdYvDXF4dII12+PPY2I2Y9/aXcfek0fojxK0CDBVqcvz6Ds0AuHboaXG6WeSnRtO
      SEUpDaWq1ik5F4NfSmrEh4+/hupPYOLxHfk9kLVdnr9xkUyMZTnBKZafLCmUzev0PQwDfOf3
      X8HnH3yG7ZuhfTmKA9x6ve1IRU2cHZeooLG+kTAK01h0uDDHn1mqWP+2g+2aHCwj+96Xh/6p
      w4hi8/kccRzbG1CIE5C3JE/jbvo3ukpVVq1xXVwarq01sHf/AFuvDJigxT+wdp+DA7T5ILxK
      dDMM4f9sOYX5FwTm7gDJEMSsT+3Ju3Kuv4by4Vc/RLJpjLJkUTDjYlnGWvBMPPSX6FQT9Sfg
      4m0DvHE6aX39H5jTU6WVI53ScIT7U5vtgymBrUM9esbqUP1Vc2gBVNOOqt3EKUc+ATxXrknM
      4n7wANDrJ3j84ARV2ZXZlPVpxTEz89ksQ6kKrF2LIIL2YSaceev6fc2bdNbDXxr40NoERQnp
      5Q+2nJ0scHQwxc7toZk3sHR3AM+G91JCIs1S8s0ULYB3OUCjIPtach8tL44gpRBwgL9Dl2BI
      YrJKV1aONW0w0YUXflxL2iabcasqmpw0F1t+mtepSbpbl5z3aC4UkcXTwWitDXco8hqWGw5z
      +5UdBJHA5e3xSsAi9wyu1P7t336Ea2vDlrbWcFs0y6thAU576i6TIU//tccpebwCsCfBvLgn
      0e4sCIG1eEk6wHfe+if4dx8+Rrwzr5UYGhiY8qStiGCHzq0XQrRk61+mtDZPN5STzhOaAzZY
      oOInsl2F9A3eh7VI/QIlywocHzWWMw7Ei3npfYfclIUQrTr8c3+Y4v4XT7Bxedh504stLalD
      YLiRGG5NyAGgKqva+CRa8M/PPbTW1nmPHPs4MWlMt40oIOrLAMMwbO2FW86OFri0OVwacnsn
      YH994Qhw+dJl/Mm3/gf8m5/8S/R2KhDgWc6pjbLYUO02KTGya9Oe0qQkry7cdEqs2iM6NvXB
      gspF85vbZluXaNg18TiiuLqRbMHfUvU4nmMGrf5I1DFOdAmUqhCwc4myNM58nHOx2bbGffu1
      XTx9fIanT0/x3m/cdmp2I2ygImgFe6+zEAJBYL80i2pNbw0Rk9YUTIurbfbqNqA2JkyaD+dC
      3OwMAKowZy7T8wzPU15OevTRGjbCa1jgQf0LA8y60NWirmjkpb5c7rSiSfObD7S4VOULMnEB
      31LzFaSfW5gsNxN6CYg4y38e5AWMJ+Xa+sAiwXxhEsOGQQilFYrc5MuhewSKQiPtpSjydm4c
      IUzATMPxTHvnZzNcubZh52DHTJIPJxZ1nevXdnDv7h6uvjZu1ppTb7t+/J6AJhU7EQYAdbIw
      XZuL7Yuol9BdaNgDTkZ0nj2ZYOPSCElyCXluuNx8muHp7AC9QYRHn50hiCRG6RinkzNcf3v8
      clIjAsAyFAOk/wugOdRBe0HdtRBW3xfmGsza0qHrNvhldpZ7cKTCMuXW2tw/VZUUKVbVca3O
      WNmpr/1VE61vK6vmWXtGFOjBa3XSW9FesiQ2WdIWi0Vt7QjsepRVac2iXOxwxyrYQdmly2NM
      zpsc+3z4ghECXvrDBDevXsPjL8+XWWh75raxfFEiCIMljriK01hx0gMyWmucHE5x/+NnSMM+
      NrfHGK31cHlrhEubQ4w3+tAVIKYp/tEffBOv3bmJpC/x3nuvYnKSvzwEGMfGB6Wt0wsmLrjP
      TMIpdw2EBQxtLntQ9WFV7cZMiFQp8upvFt6/5KL1UddmWeP0Rm9pO9ZW0ctfjf6nLQKRmdde
      TK0NglY1sK5S3yz/B5DnuTmAq0WcqqqaAHGLaG2uZnSndsoVQvr+IEGaJHjw5VN/5w6W0hqO
      xj3c2LmKk6dzpmK6riw0bo3Dx1NsbA6bsWmGcHbsGpPTBfa+eFYn8XVgv2YuUkpkixKTwwLv
      vHsLWzvjJTyMkwjXLl/Fm+/cQBgFOJ9NsfFqiAePHwF4CXmBqFzqX0FV0NG9sIDMfW00faiL
      7Ck8eXRUA1W7PbKoyqAOm5MSQgrIIIAMAkQsPWFXME0D4IaVSynr9ijzQqOMmz4b6urjaM3G
      MQ7D/mlNB2UaWit0Qj/ADg5NSdMUaZqg3+tDygC9nrkuNY5j9Pt9pKmJTuv1ekjTxN6S2Ov1
      O/u4euOyRRT+z8JqDag8IEdAoNePcfBggoMvJxZgibvZzao/b10b4ujgHFxx5oXaTuIIt29d
      xaO7J5zK2XFoAPNpjg9/8BA7VzfqCzEqVFVpkozVgfJRHGBrd4w8K/HVvX0EawWCUOL6OyNc
      fX3tJV2QAeDN19/C/e9/hNnm3ca2WwNx235ARSBdl3h4/ACLezlu3d6F8e0hzRkQKwNmmHzu
      AJqqb2HxvEJd1+95riICWYwa2bhlzaL+rG1c2EMYAwPy+ZRgq0AysaFGCtI3rSdsx/xtU7Xo
      c7Eli82VKZ62ufr9MArwnW+/g6f7pyjyKcJYemRVM8iqNG7khCQaTWJdDY2vvzxCmSsMRj3E
      SYir1zbx+O4Ziio3PkvC3FZz5fYanj46w2///pvmBF4vr4v5bIjTzz68i7VrEUbrCdunl6QE
      A4Z9fe+3/zn+/Pv/CvrKkyWobJyX6m/1BHsbIY7O95F9VuCNN26A7MvEMVxTYwuVGmJmnok2
      w26UcdUGfg1o0XahsDl9gNbiExDSeCQbQaMDNMqMa0nyFTsUiwRuwlxTq6pKaNFkSeZ1ZBAg
      kFzXaRd3HCSecbcNTvkh2hYsKYGT0zNsb6d23doCrClPH0zwxts3WhycGOh8kkMKiTfeuWKf
      jdf7GK/3UeRVHToKTM8X+OrTZxBaIopDq/O5q6g18J//5lNcujTG2rUIg/XYzsWui3fFX1CJ
      4xh//O1/gcXTJgkVwCiPK/jVT9ORxGLtCB9/eq8JWUQjQnExym6DRwnkhVubuBVCOECxTDWF
      tWPTAdqy1afhBPw5iQEXEOLOwucrhEQURvbSDDoZthnR7MCF1RuW1gBtEUdrEyRUVpUVKypl
      /Imq0gAk1ddao5IFrCu6lX60Ff2ePDjD1taGsRTVCKeUxmyaYT7L8eirY9x+1Z8aPYwk4jRE
      2o+xuTNGJGK8+c6N+tI7ZXUJurhcaY29rw6w9VqC3rUKo406pxC3uomXdEMML4PBANHsMhbT
      Eo9/1GRKW1LgWm8JRD2J8vI5fvrRF3ViJPM7/d8Cf6NrXSxmgERV3VB+9pme800GjP+QcrIy
      EBCRI0UDfqL1vN13Y1lqC3/uJzL/OavCdKn2b6JVn1N1/qy1PsLcLBlGISKLSAGkNIglA5MR
      T9XAL6TA5fElPL536rGYmTI9yjEYpZieZ9BK49n+OR7ee4b7nxzi3if7ePMb19k6tNdkaSXY
      JM1l2hJSBiZlTSChKo1pOcFgLUEch+19A1Gil6gEUxFC4L/73n+Pm+V3MTmeQ1WaUY+6Uou/
      NaAUxgLhtQwffPwZyqIENz0SMFCRzvd2W1R0609Ti3EVbr8WxLWWD7poJC6YtilvGxk0+4+j
      SDffanpqTLiNSAG4ANTRArMGLTVdD7PRU2qAd8UbDWzvbmBrtIXHn5+jrFSrX6U09vfO8PkH
      TzA5yvDx+w8hRQhUEu/+5k289d4NlKXhNGVV1Z6rJoy0rLkNX8udq+t4+qSdYUKIJmHa558/
      wPo1I/KoOhOfsbZVKKvSmsxfOgIAxob9xu1vYHx5gLP9gsF7s3lty02zMzIQSG6UeP+TT5DN
      edqLZQrZLtQDAzxi5/UDzomIgAopLAAY3bZNVd3igh4HHpcrCPYfab2rbPdLfTHAb7/TuQj2
      eVOnLQJ6cULY3TE6GIjTaWxur+HN12/j8d1TkEuJ0hqLeYH3fvMOfuN3X8X125v45rdfwfbu
      Gl5564qx0kUhgtDchxYGDYcRQiAIg6Ukx6O1HqpS4eDxSWv+WmssZjnm5dxewyWEid22TnCA
      zQD40pRgt1y6dAnruz0kpP/Ui68qZfxAqnYCJFd4HtxU+ODux3jn1hutu2jdQubSttoLq+gC
      y3GjpHxKKVt58N3SOjG+YL5CSGP6hNVsrXJrTYj1eCWazaXxAG6wS1OfE4omqGbJLNNeE3Qg
      inC/1ughhE1YRr9RD2EUQOjAju1ofwpMI+xcddzJQS+ZhnimxpbbSt0ft3JVlcI8W+DscIK1
      jQEOD84QBBIP9/chEoUrr42Y6GxGJwAgCG2rAi/RCuSWIAiwmdzEWfUpZJ3CgqwNRsaUpDct
      sXiyVfevAz978Aneuf4GRuN+C1A0GAJpaTeWdAN+9E/PVM3GhTBnCmV9Mtz2OORye8OZBPi9
      ZAz4aFMYJ9AAhG4EH66QA+auj7ZVponsKkujAJpzi7o960/jtuUh6axwZuMq/2bowlailqie
      IgCrdSOhJPY+OUE/7uP0fI4339jGYJgu9d802ZJzWb88wszMZzbN8OXeHjauJ9i93scn9+9i
      dDlGGElc+8awpfDTzfCs1VbnYjKZaDdV3csqZVngp5+8j0/O/wrppuPtyeTRRknSy1U0MNtX
      eOXSK9jcMjGqbeCshaPag+uznz3CaLh8OKS1hgxkKzcnFe5iAJgNKasKo3GPDxP2sKfBVvOM
      mzFFG9ioFEWJ87Mp1i4NABhLR9By/a2pZkAnvAruTVCaA6W3LAPdYlbgrXdv2DVo9JyGUGgY
      LulePAg0Zt/ZNMMnH+7hW79zB1WlEIZNuObzFGuMgIax1Zhv56cz3N97iO3XeggCuWQwWDoH
      4VaQ9gfg75MIBABhGOGd17+Jz/7mh4CemQ10J2Q5g4ZmOV5EQ5LQ35G4++QuoF/F5rZ7SXZ7
      0weDhIUaoo0snMW3KD71aTo9O52jKEtsXG7ccHlbJCKQMwYdKLXOL5x5LuY5nj0LsXN13bwh
      2u269VtmXJLRa3lvlQ7Q6Dvm+96Xz2iWNv2MhKDk8ExDMWBJlL/luq40ZrMMcZ1ziAD1/ucH
      EJQ1pZk4AG2sOEFzgEaZIIQ0xCpfFPj6wSGqMMel6ykmRybnk6pdX+IkaE7tKYsEKCaCRFgB
      rcCQ5iXdEbaqZNkCWXCKiIZGi+WRRbmSrG3uUDPp4ZUQ955+ibK6iZ3d5WxlJkJqOX15C/ip
      L8GBzhUjuqGLqK9LpbRoNy48lHQxz3H38X08OiMXDg7I7TGEVYr3vvFqPQdOFC7SRNAoRXU5
      P53hqy/3l6th1UxNUUpjMEwxXu/jR9//HHfe2MXel8/se6NRH5c2TaSW/bGehqp0Kya8qpQV
      QbU26ek3vlmnUKE8J8LcB/3oyT76uwNTvzSxBpUypKdtnqY9J9Hz7xkHAIDRaIwd8TbOis8Q
      RKK9167cb0sj8xGwAgL9rQB7z75C9VDjyrVLtQ5h3G2PDs8Rx6HJTFdTOvfon4oLn+1AHb18
      QNZobnCdM3zuFACsfE8hklWpML4eIBksG+rIL8l8BmYPKTagQ5FdUVwkGa71cOPOpsNFYPfB
      cjRrCaKOgaOnE6hK46u7B/j2d1/H/9fel8XYcZ3pfae2W3fvnWw2m5tISRQlUbYp0VbGMmTL
      MTKJMxg7CRxnEAwy8xwgLwnyljzkIY+BXxMEAQYZIDMIoACZOBPMOA48iW1JXmRLsjaSLXWz
      u8nebt+11pOHU/+pv5bbC4fi2j/R7L731nar/vX7lzM92+LBgl7YL3sB6i6ZloCZlEQDgC1N
      /QzyLiLFQ9tbPXT7PSycn4RtJ2USemGTREVyXinhpQcCBuUkhMBXX/wm5HpRawNgGp9j0dT5
      hEISrTZtYS36FKs3N7UWi+MYW2t9DHYDtJoNzZQCIluPnlHUxYfAmzHKm05oZxTVZ6lFy3+e
      TWyV/y1AocbdIIHU78+UdudOUBBiCaytbGMwGGF7s4epmRTx0cISSz2/M7srz3+geC76lzD+
      h++v4K03PkA/3EV92lJwJwEXsVooJIpChfcnOQX2BTP3/oGzAIBq3nj1+W/h++//B9RnobVi
      KUNKxqypIcio7dqkhfXOMoIbIU6fVRNh3aqNk6dmoFELxsB0Pjl2DYKUSpNMmjEZYrLXoUSO
      /UXmF22Sfye9BkiFCiGtWFVKwQD5waVxQ+5IMuHzKEpnB6UxZKogCg5gstEzL5zCrdUdTM00
      NDLHTxZDXWMURrqTj2KqbIyjftMsUrKjo1GAT26soTZl4ukLx8jwZBnaNCFhZPghrSkr0gMp
      AAAwOzOL3+r9ffzV8p+iNpc+qrz7oYmZWl4PRMqr0jKx1V1DfE3i7Nn5ogbOm3ykx9M1O3kh
      yW3P4cJMAKwjv+K18uMVK02zO3D3jm8hQFaLGCrphZAh2wdqZDtf+wyAabE6LCHQaLkY9v1M
      LqWsbIN/ZzpeFEb48N2b+OKXn9ZWhGfNDRiQRoIigcPA5SaMGH99bRvbux0YFnD8fEufz2BC
      JqVaTCNdN44pAsUU2kPgkv/ACgAAnD3zBDY6X8Z1///AtBM0mDMhBCgbM871lSAGkKg0DWx1
      1iCvSThGpUTz5JiZ81nuBOPKC8hU6+vL0TjrUsj4Fr5FOfPTxilTiyRvQZaHCyUgLAMQQk9Z
      yN1NVFwb3iBAo1WF1BWvWZNEx83fgeHAx8xcG5aTau68meHIV+bMInu/pFQo1O31HWzv7uDE
      ExOZcwVehN7uCJZlwrQMWLahkKNkX8r60rnjOIIQBkxTZGKBB1oAAOBzl17C6k8+Rjh7U30f
      mb91Jf5CKakNqm0Tne4tyOU6zp07gbwJzjB+dteEskLCF5pLnIZU87O9+KqTWViVfyem0fJn
      1NeYCkFZng1AWp2aEYyssCcNDJnPpFT1+oYptBUhhVmE1ym8Tz9YvrEBSIHV5e2CkQtD5Ydn
      mubZ50IkUyxYVCohsXLzNiaPVXH75i6klAhGESzhoO42MDt5DFEkVQ3RMMTtjR3UZ01MztXy
      EgYDmQPr3w+8AKhhum10cBMA14IMnQDTHnmNAyiNxzRhtWWhV/fU8pw01Kkk8MoWfKVuUL4k
      QV9PAmkKcJhP6vgliiOtnaQEbNsq5648UWyYs1jjdku183jLyMMUYn6JZCG+hAtpolosVTuq
      XpBaf2PVhmoIgWsfrME0TZy9MJ9cshIgSiR6Ix+drQGOn1BdZzKWGURISmBnu4dOvIFa00nS
      AxILrXQcfXdrhHZ1Coun5rRgsv8wf2IKH7z/Kdb7PX3jhA3MLTTTL53jjwdeAACgZrVwqxvD
      cKBcoUJXFJBXg/zRC6QaizRibVHi2rUV1VSTbEU+q6ocTJc84n0KpL1VcVYJiEbbk3wm5zNN
      Q2uhjB/KLz8vNPqQabBYRl7oobc7RK1eSRYYTyOCzClkUWhSVElJQxTGcFzFFiqglLCEElgj
      KU6j+8G//e7OAJdfPK+z1XFSemIkyiAMQ1RrjlY4wjQgJbsfAGbm2rh9fQ3t2arOKOtnJoGo
      5WC0MYLvJwt7JMyfBtTAheR5Sqi6oZ3tHtaW1nH8dD4hCsj4AUyEldHVy6/g7K2n0Rt2sN27
      jVu7y+g3b8ByAWLcfM041cpoZsv5mIYhcCu4iemNCUxNNyFEiuUbEGrSMpJAjhbpRjrLZi9o
      kH8moZhKALr1k/x/GStroFEKLgQlqjuLBKWxwMRpG79Z+RDhUOL45DGcWpxTWdWS/TN1PcUt
      EEcyXQmGuQ7c1ZMiNR1Sxrj56RaarXomsZhfiWXQ91FLFtEjgCBdakp9ccMQQGRo5idIm/IH
      tboDx4nxm48+xnMXL+i4RsYy6dhLdIdUZSwQAhOTCpFaXVpTQpBcVhxLbC3dh9mgd0ISEoPh
      AK5ThxH0cOXJr+LT9Y/w3uqPYNYiuO3soF0gtQxUCEU3h/xiKSVMz0WjWQV7ngmJZHx7WmhH
      x+Sj+HRCXVIxMEOLiNkkWJGaii+EZAy/33eXecYvkhBA+6R6lDubt7D14QaEbwMSmGpOYvEM
      JbYSxmIBYjb4VhAlDQHIFKHpLdgfUmVdr32wjle+/lzmWGRRyGoO+x5mplt633HOmW06BeFU
      LY/qWdiOifZxGyvLm6qJHyJVLAlSZihUQO/fnqgjjo9hdWkN86fbgAC2bvp4+fK3Hg4BMA0T
      x+aO4Z33fo2piSk06w1cefZlXA5exPb2Nv7XB/8J1bnE0Uaq3TKIpvYV1WeddR8vPv08HCe7
      uAXfX+2RDUclUr9WQOjeYL2VKDkWPZTk3DFi9drKa2l5sJhgD6pP0yNVQefKx8tY++UahG/B
      lDZG4Qh1t4Zz5+exsnobXuhBCMALfJw5cRJRrMrPU6tZlFP1nvp/6aNbuPj8qSSROF6mlVZO
      71vxiOrumsIq5CxSRaN+11sVbOxuY2PdxMzchLaggi1nI5AdEjA51UCv28b6hxIT7SmcnT6J
      er3+cAgAoFonX7pyNfOebduYm5vDlwbfwvLta1jGm6i0spg7uR66MIy0oAQsFgBneY4hQzKd
      EscFK0VkihTnyjKzDSYy2UZCTUlLKx35JURRnDBM2XkOLiAz51I8v7/Vx+yUgzga4e0b72L2
      bBU1Q+HjVWng040b6CxFCLwI07MttCdqOUvASd2Em59s4/S54+DgJo+++JXm75tMrKWuEpWA
      JWzEcajgytxRqPBOSomZxQZufryOSsVBrV7JDgFILkVCwrFtFWBv9THXehZPXbmYEa4HrhRi
      P5JSpgOgAOzs7GBrYxtfvvIars58G/62mWyXIkBCiMxocCkl3EEbtmOlrgvSh0H3Ud9Pwu4l
      dBBcfnHshx1PWQGhN1EfIsM0yQ7pdjLz8hAkMj/q0tU5GtMKXTEtA8fO13RsQ9+zNVvB4pUq
      RtMbWLmlJnUUYvUk3tJMKdV6Y0iNRrodcwsLtypjnWOt9ZutGkb9ILctxXiS3Z8Y82eb2NjZ
      hOPYsCzVq2wnPcyO48BOmF9KCelN4emnnik8u4dOAABga2tL/91qtXD58mUIIfDE2Sfx/OTf
      RDCKU3QD0FPYeDBccRzw5pNxiS0iIYQ2pzzgzoSkqZej9xnXOaZxmoTL81tRJ1zxskhoUkkr
      v3TmEpZaDBJOLmhqe6uitGnghwj9UP9WkyAUQhaGEeIoRnuyVogjiufMNuakiiV9TfdpYrKO
      3k5xsG3GRgp276oBblxbRb4gkYQqimOsrnRwauFC2U16eFwgIiEEjh1L6/eXlpbQbDYxM6NG
      LT557iLe/vFfQFTThSIAKOXBkIwd6zY62/OYmOQ1/ImbVGB0ZN6jbC+VOfAEF6X96XmVFe+V
      NsMUBEWWv12iTnnwrrdibl25xSoKD99sMPBwe30nc0YaE5meQ2L95rYedZ4eWQlfWhKSXpne
      NvHZCYCg9wzDgAxVVWgcxblrl2miMhGa1nQVu+hj4/YuZubaGZsaRzHWPvFw6clXMDU1XXIP
      HkIByNPZs2czry3LQtM4ht7gOiIPiAOB2DdgyQpsw4VtVOEPItTkEO2JRpaxk0A5LQTLuijF
      Wp28ec83lGeDCx1Q5x1jKGSmaIXykcFelI0X8jFN8cRsT86EyTb1hov5xakCMJCvd1pb2Ybv
      BXAqtj4nb8SRMlmA3Eg76SSgVscURhqoCiVghjBgw9F4QBxFDHhQFysj1Z5jW6q/tznpYuv6
      Dmbn2klsBYxGAbbXJF584atw3eI6xEQPvQCU0csXv4G1W2uotevJbEw3nZ4sBHZ3O3j/2lu4
      tbaDueNtPXFgb3+VxQr6//LgtJDoylkSbgl0EqcIWRWOm3yYe39v140fLisUdK1cYET+44L1
      yL+emGrg9touzpzPdtXRtlReUamo+aQpwlMUSvpsenISO5u30Z6p6XwMURzHEJaVuQ5hAKj7
      2Ly9i6mZFlaWOlicew5PXTmz76Ifj5wACCEwOTkF163C96ltLs708dbrDVy5/Co6nQ5WVq5j
      4N9GY8LA5HQTvHCTlzxQAJw16Kl7xVEiXn4rk8BNPy4uDAAkBankB+ughH+rMibPl2RkP+PW
      I/XvixYla6TKhSkT83A/G6pzrdms5w6dbRsN/DAZTiX1tZDfz7+Dvn+GgNeL9L2QIr33yo1l
      6/4mNDFXxfpHW/A9gXMnr2DhxMnS75KnR04AAHUjK5UKfN9X5jfj5ki9UES9XsfFJy8jlhLr
      66tYv74MX25j5ngNtbqbLJFEx8z58UgXkshbhrKA+tfvfgzfHLB8BPQ1lfnovh+i3SzTXmWu
      jij5fJzrlBWCcSjTYDhAFMbJbB0BPVWDLTYeRzHCIMb8yUl13CTBl1Z3KhqNAjTq5IYo4Rzn
      ZgJAZ7eH2RP11CoXvlvx2xiGgGf0cWL61QMzP/CICgCQLhbHu4E4KlOr1TAajeD7PoIoxOTU
      NOaPn4CUEp98egM3125Cmj0cW2jBsuk2pc6PzidQ0Jww4tZGF8OtFqrV7GyiKftJrEa/QmMx
      1NBcel3FppA69lmvC+OZd3/Kuh95F0kCqC7EWFnexOLpWYAJO9/+vV8s49wF1VuRty0E8Uop
      k5KPbIDOhSBPURxCGCZTKzmFojFu9bcUqvf3VPvzOH3q9KHuxCMrAICaoR+G6YJwpG1pVr7j
      OFpAOp0OfN+HYRg4tXgGZ4xzGA6HWF65ge5oHXbVR7Plai7heng09AEBOI6FXneIZy58CfV6
      PVPtaBgGlm8ew8+W/wdaCzRQlwsBHbUc2hyv6dVUaFoMmntR2X2yliN7HI7XK0a3HANbu9s4
      JWaR9qCn5w/DCDIGJqaZ+6NPlUqSlBKmZSAMo5zWz19DSo7pII7/j5XnAAAW3ElEQVRCGFbq
      ymWSXMnbkrlNnY0Rrp67OFaoxtEjLQC2baNSqcDzUlxZN0sgXWZTSomJiQkEQYDBYKBvtuM4
      OP/E0xDiInY6O+h2dwtsJABMViT8IIA5cnC8rbLWQRBo94t+Tp44hWbjO/jhu3+K1tmyBaqz
      zDkeAs0LgtCCzHuVLctKgtwDBsvIiklcH6KzM0CrXS2ceXO9i/mTU6m7k79YqRpa1HWYal2A
      /Pkk75pL9x+OPFRNK3Up+VcFi8WY2TT8FiYnyvvI96JHWgCEELBtWwsA3eQwVMNRaQFlYhZe
      VSqESFYdUevSNhtNNBvF0X7EbFEUaTQpCAIddNM54ziG7/toNVt49dl/gL/89X9B63SYyU1w
      Jj2MIlNzdw5zZ7IkKBqn1wmnuW0T21tdNFvV7PUIgVqjgluruxiNikkrQxhYPDsHQNkWyzLh
      DQNIKbG92cUbv3kbEnmMPyEp0e0OcXniHCZn6sn1IK1ApTeQlJNIBZ8eb5YnuvajR1oAAKXF
      K5UKRiO1ABzVnURRVFhBPC2FKGLftNAeN+P5FsogCLQgUc8AkHaD0TaNegOvPfcdvPneDzGc
      vIFq09qTgfPxQZkbIzItlllXSpQ292f7HJKjsOMLDHZCnJxpMFcuRW/cuo0zF2aSLYUuoY6i
      GDeXdtQVJCbFMAWiKMag76HiOrjZWcXA3c6CVQwcEBWBt9+RODYzpUazmyacigWnYqNSsWDZ
      ppqIZwr89KfvwjQMfO3S58bfwD3okRcAAKVYcNl4DtM0NXpEpAu1kA2i6TVfjZGOWag3ya2J
      GwQBqtUqvnLlt/EXb7wO2eCDqMb56sm7TBjK8f1xxyk3KekoEqnhRiLLc9HQM1azxzZkSbM/
      1BptvudDSiAMInheCMMQGPQ9rF4PcenFSSy2FvGBv6NWb4QADFXPT1ZISok1sYTVzaUUdogA
      GQkgEhDSgCksNEULZjPGxmgD3eFu6ffbjx4LAXBdF0EQZBgbKEKQQgi4rquWHmXv5xmYa35y
      kfLH5dWJZbBoGIawbRvPLL6Itzb/KxrTTu4YaRDLD89x9HLKXsv4oJCa4pPrFEXBM0w+cBe5
      60jcriTHQRYvjmNUqjauv9fFucVn0a7Wsbm9iTPHapi8OI333v8ZLhx7EZ9vfQ1TjVkYhoHN
      3Vv4+fUf4zedn0DaKvObLdGQEJaAsFQuQyJGKANshyOIoYCwgbWd5XE3ZE96LAQAQKYaVAgB
      z/N0djK/HWl12na/QjlOB0UhpFQDnI7NHUf0qQ1MA3l8nppY8ihPuTa/Y0y0NDMrJWBKW8NK
      ukdgTJzCLeD2GtCoCczMzgFCYGFhQW/3N774tcL5z+AMvvD8S/jo+gf4ox99D13rloJWPQNX
      Z34bM5Oz+MGHr2PkbicnS6yxnV7P9dvv3dF3f2wEIJ8Yi+MY3W5XLdFksyVUhUCtVkO3292T
      mfcTjHwhXX5bes8wDMxa5zGKPtL1/5QxjSKJ4ScuTjY/h0gGGAS72B6toXFmVFgEbz9XJ4/U
      50sSZAx0lwUqMyGsioGNa0MsVk+hc9NGLCME6GDmWB2GKfDh29twqyZOnG3o1ksh0tGHJ845
      6G1IWKZa9OKgdP7sk/jd3h/gv//yP+PU1AV8+dmvY/HkKRiGgUvnL+N73/9X8CqdzFekb7XS
      u4ZOp4N2u33g8wF4sMajf9YUxzGGw2EGFgUUbBmGIWq1mmbMTqez7yhvztgU4DqOU2D+vYis
      zf/91Z/Dm1pCpZYGxJ3VAK9d+H3U63XNsEHg43///L/BOLEB086PS9dnLTlTXkCy8GgUSFRX
      n8HHn/wGX3jhJTx55lm0mi0taKPRCMsrSxiMutjZ7mCiNYNhsA2ruYNGu6Jdoe3bA2xvDHDx
      zG/hxIkF2LZ9KGye4qn8ijAA8ObbP8Ef/+LfAXaUWCblENHCJX/33B/iK1dfO/C5gEdEAMIw
      zLg4+1EQBOh2uwBUMGyaaqHpOI51Aqvf7yMIglJNTr9rtZpmDnJpypAlILUIZXGEZVkwDAMf
      XH8HH9x6E5X5vhou9ekJfO3q72QElo7//375lxjNfpQIQVlyi2h8MM0pCiWs1VP4xm/9bsYi
      7kWe5+FHb/wZJo8LbN/2YRgSNWseAgId71PIwMWrL3/zwMfbj6SU+OM/+4/4+eYPEDuBFgCq
      oZoKT+Ff/qN/m+nb3o8eCQHwff9Qmoa0da/X068rlYquGo2iSLtAZWgRkeo4kjrbTALABYUT
      rd9L5wRSoaLYQ0qJdz74BTb7N/HFS6/BcZxMNhuAPsfrP/73mHyCchd7uT5l9yD92+vFOBZd
      xpcuf7UgwPtRHMe4dv0jnJg/icFggHa7Ddu28et3fgUpAjzz1OV9KzIPQ77v4+fvvIU/eed7
      gJWWVwsAiAW+8+w/w4uXr+5zlJQeCQG4UxqNRuj3+/p1pVLRWp2YdXd390CuEKAsi23bmQB6
      3LZE3KIQkiKl1Mfh7Z/8GI7j4JfvvoGN9ltJwdo4F4jnKtTv3qYPAQNWBTB6E7h88lU8cebJ
      Pb/jg0SD4QD/+o/+KYJGFzQVgjr+psJT+Off+TcHtjoPZUvknRBleTkzUz0Qfe55HjzPg2EY
      erHper2eMakcSeKJM15uTSUWdNz8vmXEE2VRFKkivSAYu18URbj05OfQWzH2yRoL9qOEoLMc
      Y8F/GXO7X8I3r/6Th4r5AQASiBAmyFOIMAgRR2r501vRDSx9cuPAh3psBICIMsJEeVckHyA7
      joNms5lhwvw+vO4nX06RmSN0ADiVSiry58hfM2WyTzdewKiXz0VIFF0f9Xr5FwO43QVcvXoV
      r7zyyl3zz+8lXf/0GmLX09P5hCEgDLWem2EDu/2DJ8UeGwEgBqlUKtoK+L6P0WiEIAgQJosy
      +75fYDiyBLZta+1uGAYqlYr+nOqJ9jp/mQBwxuXlGfmsc35bQMUcLzzzEho7TyEKxy3SkcKc
      G9c8tLyz+O53v6st38NIn6x9jLhrAXEyclKo52Gaap2wj1bfOXDu5rERACDVyIPBANvb2xgM
      Bnp8hmVZOhAdDocZV4kabJrNpoY54zjWGWNeDkHb588LZKfK7ZUp5lZkHJEVGI1GeOGpq+jd
      cJKKy3J/qHsrhLm2gG9/+9sPNfMDwERzGidxEYjSSlHJJgC+s/ZGIes/jh4rAQAUM9brdbiu
      q1slOZEbRGXReR8+7wrRD/UWjPPz+bF4jMDJNM0C4jNOqABlAaSUqFZrePW5v4fOUuHbJoGv
      hDcKcP78BVSr4xvEHxa6/PTn0a2uQthSizsvFu2ZG/jw+vsHOtZjJwBAqtG5Jsxj/L7vF+IB
      QAXOrutmgmFOXKvzH36OKIp0W2YeBSpzffhxiSj3QdanWq2iiqlcoVySUQ4l1n7l49KlS3d6
      yx4oqtVquDj/hQyUS9lza1CHMCV++uEPD+QGPZYCACgt3Gg00Gq1NJ7PJ0cAKmCOoqhgBer1
      OlqtVsGvJ9iSzG/ZA+AWh/7Ou0JlOYQ8+kTWgiNb8+1zCH3lBmUK1wxgbubYI6H9ib7xxd+B
      M2hBegkKJgSmvbP4gy//CyA0cWP7/QKEzJURIW2PrQAQWZalBaFarWaQnCiK0Ov1xpZO12o1
      VCoVnTAjq0JauSwRFoahbpjhAkRNOhSME41DgXgVKgnBxfPPo79C83l4FaeAU7XR6XTu4p27
      vzQ5MYm/ffH3YHgKiIAENvAJ/vzN1xGbEXrhDgaDgd6elFOv19OKzbbtIwEAoHH/SqWicX/u
      rgyHw1Jt7rquLp3gDM0FgLs0VCtESS61nGcEz/Ngmmq2peu6BatDATP9UOa7rOziZP0SdtaH
      acUkWYymh83NzUNVtj7o9MS5C2jZ09rdgxPhGt4CRDFuIgCk0Whk8j9HAsCIYgNK5xORVh7n
      0hiGoTvBOFEtEQ9+6TyWZekfsiL0GWd4oOgSlVkYKiB7/ukr+MriP4Zx8xR2VlJ415kboVav
      HQhhelho/vg8vvnSPwRi1R6ppnKre1UxqoUqXys3UAs4EoBSMgyjYAnKShIAaHeGiG4wwar5
      OiEAY0sl8sEw35Y+57BrnojZ6/UGXn7+NXz9qd/H6eHX0d64jO5ajKXlj+/0ljyw9NS5Z9Ac
      zgMBTfcDIAHXrGkBKBN4DUw8zrVA+1Gn09EMXKlUUK1WC2W6URSh3+9rtyWP+NCoFdJAe/UJ
      cFdpXFUpPy/5sfntKEZwXTWbiAr8XNfVRYOHKVF+0CkIArz+gz/BX228DiRTJj7XfA2/93f+
      ENT7kYedtVW+D9f70BD3oT3PK9W6pmmi0WigVquVZoLJPdovS8wDWi5E+c/IFaPKUZ57oIfN
      rRYJcLVafSSZH1BVuV976W/BHCp4Wo4MnGydHwtVEwkhHp+OsMMSTY7gNBqNUK1WC8xMZRGO
      42A0GumgmWt3jvcD2YeSb7rn21GADGTbOsMw1B1Y+dyD7/sZf5cE8DB18g8bNRtNnGs8h2Hc
      gxO38dSFp/RneQEYDoe6rOWxcYHKsPW9yPd9DAaDgtZ3XRe1Wm3sfnEc6xJqYkwqk84LADFs
      WSzAZxkRM1PyjBg/3wRErk/eLarX65lA+1EisnQ8G7+1tYW5ubmx23e7Xd0E9eiqhBwd9uHb
      to1arVbQmnycYhlRAM21uWVZpSUOe2V9ecM+bUPQJ5Vr8H0pGM/X+TyKLg+RlBK73V18/39+
      H2/+7E3tGo5jfiDNt3iep57B42IB7oTInaAbBkD3DZNWHudWRFGEwWCg0SNCaHjVaF57029K
      cnEXJn9ssh6k7cklypdfSynRbrdLIcBHgchVPUxZN5W5PFYW4E6I8gJU+kCVpP1+H91ud09L
      QCXUpJFN09z3IeWTXASlcqIHTu9zN4rcNS4I+wWCDztREvMw5DiOfpZHAnBAsiwr0xhDtSR7
      JZXIHaISao7m5Ilj/OOqTil7XPbAeV1Rnun3a+l8HIlioiMBOASZpqmzxBSollWMchJCaIhU
      SlmIB7jrEwSBhjfzQpLH/XlCjLrIyCpQiQVt9zgLwLjMN8HXRwJwSCKtTkQVmfvt02g0MoFx
      vrSC3jcMA2EYYnV1FWEYYn19XSdyqNDO9/3McYIgyLg8j3LgS0Q5EL78FX8vn0vJkwYo7vWF
      PwrEA1mqIN2PKCbo9/uwLAuj0Uhj87SSDWn/0WiE1dVVVCoVdDod9Ho93X5J7lS/30ej0cBg
      MIBt21hYWChArI+SEJALSP3XhOZwgdezSSsVnYAsG7DF6UgA7oCEEBmNftB9KCDu9/v6ARG2
      D6QN8QDQbrfR6XR0sEauk2EYGA6HqFQqiKII1WoV/X5fa0KeGyDU6W7O5bnXRK6h7/s65hJC
      lAIB5OpRItIwDLiuq/39smd1JAB3SHeSVSUhIGiVJ8ro7+FwCNd1cebMGf3Aut2ubuEk1GMw
      GMB1XQyHQ0xPT+sKUkq6kWDdjwzwYQeVjSMpJYbDoZ68R8Jcr9e1BaZVfcpAgDiOMRgMMkPH
      qM6KYOGjPMB9IN/39WhGQAlGr9eD4ziagaWUelQ7FbNREo5XqfJYgFsSnjyjNs57RWXlHndC
      cRxjZ2dHuze8SpfOMxwOddCfz6znq25JAREg4brukQW4H0TNL7yri0+nIAYmYSDflqZbU2sj
      ZzA+ZcI0zcyUOmKOexUT3A3NT4V83I2hzzzP0/eF7gW5QBQAk5uZPy4hd2ShjgTgHhGZXtJm
      lmVl0ApifPpNbgwhPDy5Rdllvg+Q+sLc5+fJtbvhltwJ8W42ckXInRt3PZQEdF03o/HDMESv
      10Oj0ShM4ub3wbZtPfOJKwDanjLzRwJwj4gwe3rotVotg9cD0LOGKpWKDuIAZModOBNTkw0h
      IhwK5dg/15r3grg2pjKSfMWrlBLVarXUNdsPXOAVuXtBnDTnledaOp2Ofn0kAPeQigtaZIkH
      eSQY5K8CyKA8gHrIPClGwS4F2IZhwPM8OI6T0XyfJYVhqLUu70vgscpwONRlISTsh0XSDjPY
      i66BlANPREopjwTgXhJ/0J7n6TmlxJw8BshruDAMM4N8AeikD7lUvu9nfGLKUpOVGVdGcTeI
      ysD59RFRDEN/87jnXrhkQgg9R6lWq6HX6+nrORKA+0DkC/O1BCggHrfSJN+XiGIF8vOJ0SiA
      poSbaZraInxWVaE03SIPu/LcBF/9hazAvQjOybLSvWs2mxqGPhKA+0BhGGZgUAAZzawHvSZJ
      MHJ/SOPTthwxIjeIBICyy/QeAC0kB81eH5YocOdCQKUdVKZAfQ60LNW9ikvyJSIUZx0JwH2g
      su6wMhqNRloY+ABeQoZc19Ur2RiGkckq8x4CzoRAuh7y3STS5CQE5K5Re6ZlWZrZXdfdt0/6
      syJ+r4MgOCqGu19EbZX5akXSlNS0wYWE3AZK5NB0a9L+tC0trkHuB1kTcgPKWj3/OkQuGC/p
      pu9AeD2HQu9FZpqQqHHBP93nIwG4T+Q4TiahRZqdw4XcfaH3iLhVIB+bcHHKIAPQybN8P8K4
      OUd3QiQAdA66bhJOnZmVEpGMEd8DRGo/EkIcdYQdlvbSKIclegC0YAefBcSZs2yYLj8Gn3lD
      gTS5IMSMBIvymfncuvx1iDM/vaZry78XRiHCKIR1l4vz6Bp4ToXcwv1inaMY4IDEsey7RVRV
      6rqudnmEEPpvXrciDIE4iiGQ82FZlpT/AGkDv+5+Yq4HFZFRj/OdEBWbkftD18GtWB7lyWeq
      7wbxStvD0pEAHII+K9SCzwjd2dnJrD8AALGMUXWq8HwfMlaLQhAixK0Gdzso6CWm50V0VCdE
      VoAWBNxrrWVibA7Tkp/PaRh4sI3sTCI6Ll+e6kHpV3gsq0HvVrXiZ0FRFGF3dzfjPkgAURzB
      FIZmbs5IPB4gwaDuMdoGSIWE8Pc8CmPbtu5z4AxPeYrhcKjdq2q1ijAMM9o/iEJEcQTLtIBY
      jXaxbRubm5vwPA/NZhOTk5P3dUIduUuUDT6yAA8YGYaBZrMJz/NS7Sol4iiG7aR9xfnyBhIE
      igsI8RFCZEoODMNAu91Gr9crzCD1fR/D4VAnzfJrEABp7oHWUSOUBwCkAFyjolEfSsQFQYAT
      J05gaWkJ09PT94356XsQSibl0VygB5pI8/q+rwvL8oErf801N23P3Zp8FpjXF3EEh+rsKYag
      uiQiWhyQWg/7/b5yieIIhkgDz52dHUgpcfr06UxP8/0UAP4dhsPhkQV4kIkSSxR30AonZavP
      AKlfzSdEcA3Pg1IeLFOGmPco2Ladugks4xyGofblHcfRblGj0cicxzRNDAYDLCwsaCE6CCpz
      r6hSqSgBvt8XckQHJ9u20Wq1NN7PYxnuqvD4If8Z/53PH9CxaD8+boUgYBoq5bouBoMBBoMB
      KpWKXnWF/9C5CN0i63RYIfgsKll1+chdP/IRfaZE82yoUTy/Cg1ndiqtHldykO85IBeL4gha
      HHw0GhWaaag5v9vt4vTp0wCQweH5fCPS/HcKf36WVuNIAB5C4nXx1CrJ1zUmhqEaoP1cJvqM
      V2cSUkKoUh7LD8MQU9NTMAwDq6urmJ+fL7R58n0eBL+/jI4E4CEnckdIGKiXlqzDXnmLvGtE
      xAWjLAGo3ZkoRnuijXqjgeXlZSwuLuo6IAAZjT/uOsa5a/eKjgTgESHqGSZ3ZzAYZLrQxiWe
      +GqWjuNk1jQDUiFpNBrwPC/TqC+lRBRHcN0Kms0mut2uziPwsg1q+M/XIwHpBIv7tXiHtd9s
      yyN6eIkYmubqjCPDMHRJBMUC+dqhbrercwm+72N9fT1lWiEg4xiTk5M6u0yuF+Ua+v1+smnW
      ldKFcqxj7F5mif8/v2b94QW1lr4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='United States: Number of Zika Cases (Graph)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Zika Cases Over Time - Main States' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Zika Cases Over Time + Puerto Rico' width='192'>
      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
      XAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Puerto Rico Local vs Travel' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Brazil - Overview and categories' width='192'>
      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
      JloAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Brazil: Microcephaly vs Not' width='192'>
      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
      /wd0Ip1y2yUoMgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Zika - Challenges Cleaning the Data' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Zika  - Brazil Detail' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average number of Airline Seats Per Day from Brazil - Summer 2016' width='192'>
      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
      yIxp/j8Ni0VkSRIBfwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      aZHAXdEnaXAAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
